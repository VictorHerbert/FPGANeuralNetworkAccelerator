$date
	Thu Apr 21 00:55:52 2022
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ns
$end

$scope module testbench $end
$var parameter 32 ! CLK_PERIOD $end
$var parameter 32 " CLK_HALF_PERIOD $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$var wire 1 % prod_full [0] $end
$var wire 1 & prod_full [1] $end
$var wire 1 ' prod_full [2] $end
$var wire 1 ( prod_full [3] $end
$var wire 1 ) prod_full [4] $end
$var wire 1 * prod_full [5] $end
$var wire 1 + prod_full [6] $end
$var wire 1 , prod_full [7] $end
$var wire 1 - prod_full [8] $end
$var wire 1 . prod_full [9] $end
$var wire 1 / prod_full [10] $end
$var wire 1 0 prod_full [11] $end
$var wire 1 1 prod_full [12] $end
$var wire 1 2 prod_full [13] $end
$var wire 1 3 prod_full [14] $end
$var wire 1 4 prod_full [15] $end
$var wire 1 5 prod_full [16] $end
$var wire 1 6 prod_full [17] $end
$var wire 1 7 prod_full [18] $end
$var wire 1 8 prod_full [19] $end
$var wire 1 9 prod_full [20] $end
$var wire 1 : prod_full [21] $end
$var wire 1 ; prod_full [22] $end
$var wire 1 < prod_full [23] $end
$var wire 1 = prod_full [24] $end
$var wire 1 > prod_full [25] $end
$var wire 1 ? prod_full [26] $end
$var wire 1 @ prod_full [27] $end
$var wire 1 A prod_full [28] $end
$var wire 1 B prod_full [29] $end
$var wire 1 C prod_full [30] $end
$var wire 1 D prod_full [31] $end
$var wire 1 E prod_full [32] $end
$var wire 1 F prod_full [33] $end
$var wire 1 G prod_full [34] $end
$var wire 1 H prod_full [35] $end
$var wire 1 I prod_full [36] $end
$var wire 1 J prod_full [37] $end
$var wire 1 K prod_full [38] $end
$var wire 1 L prod_full [39] $end
$var wire 1 M prod_full [40] $end
$var wire 1 N prod_full [41] $end
$var wire 1 O prod_full [42] $end
$var wire 1 P prod_full [43] $end
$var wire 1 Q prod_full [44] $end
$var wire 1 R prod_full [45] $end
$var wire 1 S prod_full [46] $end
$var wire 1 T prod_full [47] $end
$var wire 1 U prod_full [48] $end
$var wire 1 V prod_full [49] $end
$var wire 1 W prod_full [50] $end
$var wire 1 X prod_full [51] $end
$var wire 1 Y prod_full [52] $end
$var wire 1 Z prod_full [53] $end
$var wire 1 [ prod_full [54] $end
$var wire 1 \ prod_full [55] $end
$var wire 1 ] prod_full [56] $end
$var wire 1 ^ prod_full [57] $end
$var wire 1 _ prod_full [58] $end
$var wire 1 ` prod_full [59] $end
$var wire 1 a prod_full [60] $end
$var wire 1 b prod_full [61] $end
$var wire 1 c prod_full [62] $end
$var wire 1 d prod_full [63] $end
$var wire 1 e prod_full [64] $end
$var wire 1 f prod_full [65] $end
$var wire 1 g prod_full [66] $end
$var wire 1 h prod_full [67] $end
$var wire 1 i prod_full [68] $end
$var wire 1 j prod_full [69] $end
$var wire 1 k prod_full [70] $end
$var wire 1 l prod_full [71] $end
$var wire 1 m prod_full [72] $end
$var wire 1 n prod_full [73] $end
$var wire 1 o prod_full [74] $end
$var wire 1 p prod_full [75] $end
$var wire 1 q prod_full [76] $end
$var wire 1 r prod_full [77] $end
$var wire 1 s prod_full [78] $end
$var wire 1 t prod_full [79] $end
$var wire 1 u prod_full [80] $end
$var wire 1 v prod_full [81] $end
$var wire 1 w prod_full [82] $end
$var wire 1 x prod_full [83] $end
$var wire 1 y prod_full [84] $end
$var wire 1 z prod_full [85] $end
$var wire 1 { prod_full [86] $end
$var wire 1 | prod_full [87] $end
$var wire 1 } prod_full [88] $end
$var wire 1 ~ prod_full [89] $end
$var wire 1 !! prod_full [90] $end
$var wire 1 "! prod_full [91] $end
$var wire 1 #! prod_full [92] $end
$var wire 1 $! prod_full [93] $end
$var wire 1 %! prod_full [94] $end
$var wire 1 &! prod_full [95] $end
$var wire 1 '! prod_full [96] $end
$var wire 1 (! prod_full [97] $end
$var wire 1 )! prod_full [98] $end
$var wire 1 *! prod_full [99] $end
$var wire 1 +! prod_full [100] $end
$var wire 1 ,! prod_full [101] $end
$var wire 1 -! prod_full [102] $end
$var wire 1 .! prod_full [103] $end
$var wire 1 /! prod_full [104] $end
$var wire 1 0! prod_full [105] $end
$var wire 1 1! prod_full [106] $end
$var wire 1 2! prod_full [107] $end
$var wire 1 3! prod_full [108] $end
$var wire 1 4! prod_full [109] $end
$var wire 1 5! prod_full [110] $end
$var wire 1 6! prod_full [111] $end
$var wire 1 7! prod_full [112] $end
$var wire 1 8! prod_full [113] $end
$var wire 1 9! prod_full [114] $end
$var wire 1 :! prod_full [115] $end
$var wire 1 ;! prod_full [116] $end
$var wire 1 <! prod_full [117] $end
$var wire 1 =! prod_full [118] $end
$var wire 1 >! prod_full [119] $end
$var wire 1 ?! prod_full [120] $end
$var wire 1 @! prod_full [121] $end
$var wire 1 A! prod_full [122] $end
$var wire 1 B! prod_full [123] $end
$var wire 1 C! prod_full [124] $end
$var wire 1 D! prod_full [125] $end
$var wire 1 E! prod_full [126] $end
$var wire 1 F! prod_full [127] $end
$var wire 1 G! mac_reg [0] $end
$var wire 1 H! mac_reg [1] $end
$var wire 1 I! mac_reg [2] $end
$var wire 1 J! mac_reg [3] $end
$var wire 1 K! mac_reg [4] $end
$var wire 1 L! mac_reg [5] $end
$var wire 1 M! mac_reg [6] $end
$var wire 1 N! mac_reg [7] $end
$var wire 1 O! mac_reg [8] $end
$var wire 1 P! mac_reg [9] $end
$var wire 1 Q! mac_reg [10] $end
$var wire 1 R! mac_reg [11] $end
$var wire 1 S! mac_reg [12] $end
$var wire 1 T! mac_reg [13] $end
$var wire 1 U! mac_reg [14] $end
$var wire 1 V! mac_reg [15] $end
$var wire 1 W! mac_reg [16] $end
$var wire 1 X! mac_reg [17] $end
$var wire 1 Y! mac_reg [18] $end
$var wire 1 Z! mac_reg [19] $end
$var wire 1 [! mac_reg [20] $end
$var wire 1 \! mac_reg [21] $end
$var wire 1 ]! mac_reg [22] $end
$var wire 1 ^! mac_reg [23] $end
$var wire 1 _! mac_reg [24] $end
$var wire 1 `! mac_reg [25] $end
$var wire 1 a! mac_reg [26] $end
$var wire 1 b! mac_reg [27] $end
$var wire 1 c! mac_reg [28] $end
$var wire 1 d! mac_reg [29] $end
$var wire 1 e! mac_reg [30] $end
$var wire 1 f! mac_reg [31] $end
$var wire 1 g! mac_reg [32] $end
$var wire 1 h! mac_reg [33] $end
$var wire 1 i! mac_reg [34] $end
$var wire 1 j! mac_reg [35] $end
$var wire 1 k! mac_reg [36] $end
$var wire 1 l! mac_reg [37] $end
$var wire 1 m! mac_reg [38] $end
$var wire 1 n! mac_reg [39] $end
$var wire 1 o! mac_reg [40] $end
$var wire 1 p! mac_reg [41] $end
$var wire 1 q! mac_reg [42] $end
$var wire 1 r! mac_reg [43] $end
$var wire 1 s! mac_reg [44] $end
$var wire 1 t! mac_reg [45] $end
$var wire 1 u! mac_reg [46] $end
$var wire 1 v! mac_reg [47] $end
$var wire 1 w! mac_reg [48] $end
$var wire 1 x! mac_reg [49] $end
$var wire 1 y! mac_reg [50] $end
$var wire 1 z! mac_reg [51] $end
$var wire 1 {! mac_reg [52] $end
$var wire 1 |! mac_reg [53] $end
$var wire 1 }! mac_reg [54] $end
$var wire 1 ~! mac_reg [55] $end
$var wire 1 !" mac_reg [56] $end
$var wire 1 "" mac_reg [57] $end
$var wire 1 #" mac_reg [58] $end
$var wire 1 $" mac_reg [59] $end
$var wire 1 %" mac_reg [60] $end
$var wire 1 &" mac_reg [61] $end
$var wire 1 '" mac_reg [62] $end
$var wire 1 (" mac_reg [63] $end
$var wire 1 )" sum_pos_overflow [3] $end
$var wire 1 *" sum_pos_overflow [2] $end
$var wire 1 +" sum_pos_overflow [1] $end
$var wire 1 ," sum_pos_overflow [0] $end
$var wire 1 -" sum_neg_overflow [3] $end
$var wire 1 ." sum_neg_overflow [2] $end
$var wire 1 /" sum_neg_overflow [1] $end
$var wire 1 0" sum_neg_overflow [0] $end
$var wire 1 1" prod_pos_overflow [3] $end
$var wire 1 2" prod_pos_overflow [2] $end
$var wire 1 3" prod_pos_overflow [1] $end
$var wire 1 4" prod_pos_overflow [0] $end
$var wire 1 5" prod_neg_overflow [3] $end
$var wire 1 6" prod_neg_overflow [2] $end
$var wire 1 7" prod_neg_overflow [1] $end
$var wire 1 8" prod_neg_overflow [0] $end

$scope module nn $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 ;" mac_reg_enable [3] $end
$var wire 1 <" mac_reg_enable [2] $end
$var wire 1 =" mac_reg_enable [1] $end
$var wire 1 >" mac_reg_enable [0] $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 C" serializer_update $end
$var wire 1 D" act_input_select $end
$var wire 1 E" act_bypass $end
$var wire 1 F" xy_read_addr [4] $end
$var wire 1 G" xy_read_addr [3] $end
$var wire 1 H" xy_read_addr [2] $end
$var wire 1 I" xy_read_addr [1] $end
$var wire 1 J" xy_read_addr [0] $end
$var wire 1 K" xy_write_addr [4] $end
$var wire 1 L" xy_write_addr [3] $end
$var wire 1 M" xy_write_addr [2] $end
$var wire 1 N" xy_write_addr [1] $end
$var wire 1 O" xy_write_addr [0] $end
$var wire 1 P" xy_write_enable $end
$var wire 1 Q" xy_acc_loopback $end
$var wire 1 R" xy_acc_op $end
$var wire 1 S" w_read_addr [4] $end
$var wire 1 T" w_read_addr [3] $end
$var wire 1 U" w_read_addr [2] $end
$var wire 1 V" w_read_addr [1] $end
$var wire 1 W" w_read_addr [0] $end
$var wire 1 X" w_write_addr [4] $end
$var wire 1 Y" w_write_addr [3] $end
$var wire 1 Z" w_write_addr [2] $end
$var wire 1 [" w_write_addr [1] $end
$var wire 1 \" w_write_addr [0] $end
$var wire 1 ]" w_write_enable $end
$var wire 1 ^" inst_write_enable $end
$var wire 1 _" inst_read_addr [7] $end
$var wire 1 `" inst_read_addr [6] $end
$var wire 1 a" inst_read_addr [5] $end
$var wire 1 b" inst_read_addr [4] $end
$var wire 1 c" inst_read_addr [3] $end
$var wire 1 d" inst_read_addr [2] $end
$var wire 1 e" inst_read_addr [1] $end
$var wire 1 f" inst_read_addr [0] $end
$var wire 1 g" inst_write_addr [7] $end
$var wire 1 h" inst_write_addr [6] $end
$var wire 1 i" inst_write_addr [5] $end
$var wire 1 j" inst_write_addr [4] $end
$var wire 1 k" inst_write_addr [3] $end
$var wire 1 l" inst_write_addr [2] $end
$var wire 1 m" inst_write_addr [1] $end
$var wire 1 n" inst_write_addr [0] $end
$var wire 1 o" inst_data [31] $end
$var wire 1 p" inst_data [30] $end
$var wire 1 q" inst_data [29] $end
$var wire 1 r" inst_data [28] $end
$var wire 1 s" inst_data [27] $end
$var wire 1 t" inst_data [26] $end
$var wire 1 u" inst_data [25] $end
$var wire 1 v" inst_data [24] $end
$var wire 1 w" inst_data [23] $end
$var wire 1 x" inst_data [22] $end
$var wire 1 y" inst_data [21] $end
$var wire 1 z" inst_data [20] $end
$var wire 1 {" inst_data [19] $end
$var wire 1 |" inst_data [18] $end
$var wire 1 }" inst_data [17] $end
$var wire 1 ~" inst_data [16] $end
$var wire 1 !# inst_data [15] $end
$var wire 1 "# inst_data [14] $end
$var wire 1 ## inst_data [13] $end
$var wire 1 $# inst_data [12] $end
$var wire 1 %# inst_data [11] $end
$var wire 1 &# inst_data [10] $end
$var wire 1 '# inst_data [9] $end
$var wire 1 (# inst_data [8] $end
$var wire 1 )# inst_data [7] $end
$var wire 1 *# inst_data [6] $end
$var wire 1 +# inst_data [5] $end
$var wire 1 ,# inst_data [4] $end
$var wire 1 -# inst_data [3] $end
$var wire 1 .# inst_data [2] $end
$var wire 1 /# inst_data [1] $end
$var wire 1 0# inst_data [0] $end
$var wire 1 1# x [15] $end
$var wire 1 2# x [14] $end
$var wire 1 3# x [13] $end
$var wire 1 4# x [12] $end
$var wire 1 5# x [11] $end
$var wire 1 6# x [10] $end
$var wire 1 7# x [9] $end
$var wire 1 8# x [8] $end
$var wire 1 9# x [7] $end
$var wire 1 :# x [6] $end
$var wire 1 ;# x [5] $end
$var wire 1 <# x [4] $end
$var wire 1 =# x [3] $end
$var wire 1 ># x [2] $end
$var wire 1 ?# x [1] $end
$var wire 1 @# x [0] $end
$var wire 1 A# w [0] $end
$var wire 1 B# w [1] $end
$var wire 1 C# w [2] $end
$var wire 1 D# w [3] $end
$var wire 1 E# w [4] $end
$var wire 1 F# w [5] $end
$var wire 1 G# w [6] $end
$var wire 1 H# w [7] $end
$var wire 1 I# w [8] $end
$var wire 1 J# w [9] $end
$var wire 1 K# w [10] $end
$var wire 1 L# w [11] $end
$var wire 1 M# w [12] $end
$var wire 1 N# w [13] $end
$var wire 1 O# w [14] $end
$var wire 1 P# w [15] $end
$var wire 1 Q# w [16] $end
$var wire 1 R# w [17] $end
$var wire 1 S# w [18] $end
$var wire 1 T# w [19] $end
$var wire 1 U# w [20] $end
$var wire 1 V# w [21] $end
$var wire 1 W# w [22] $end
$var wire 1 X# w [23] $end
$var wire 1 Y# w [24] $end
$var wire 1 Z# w [25] $end
$var wire 1 [# w [26] $end
$var wire 1 \# w [27] $end
$var wire 1 ]# w [28] $end
$var wire 1 ^# w [29] $end
$var wire 1 _# w [30] $end
$var wire 1 `# w [31] $end
$var wire 1 a# w [32] $end
$var wire 1 b# w [33] $end
$var wire 1 c# w [34] $end
$var wire 1 d# w [35] $end
$var wire 1 e# w [36] $end
$var wire 1 f# w [37] $end
$var wire 1 g# w [38] $end
$var wire 1 h# w [39] $end
$var wire 1 i# w [40] $end
$var wire 1 j# w [41] $end
$var wire 1 k# w [42] $end
$var wire 1 l# w [43] $end
$var wire 1 m# w [44] $end
$var wire 1 n# w [45] $end
$var wire 1 o# w [46] $end
$var wire 1 p# w [47] $end
$var wire 1 q# w [48] $end
$var wire 1 r# w [49] $end
$var wire 1 s# w [50] $end
$var wire 1 t# w [51] $end
$var wire 1 u# w [52] $end
$var wire 1 v# w [53] $end
$var wire 1 w# w [54] $end
$var wire 1 x# w [55] $end
$var wire 1 y# w [56] $end
$var wire 1 z# w [57] $end
$var wire 1 {# w [58] $end
$var wire 1 |# w [59] $end
$var wire 1 }# w [60] $end
$var wire 1 ~# w [61] $end
$var wire 1 !$ w [62] $end
$var wire 1 "$ w [63] $end
$var wire 1 #$ acc [0] $end
$var wire 1 $$ acc [1] $end
$var wire 1 %$ acc [2] $end
$var wire 1 &$ acc [3] $end
$var wire 1 '$ acc [4] $end
$var wire 1 ($ acc [5] $end
$var wire 1 )$ acc [6] $end
$var wire 1 *$ acc [7] $end
$var wire 1 +$ acc [8] $end
$var wire 1 ,$ acc [9] $end
$var wire 1 -$ acc [10] $end
$var wire 1 .$ acc [11] $end
$var wire 1 /$ acc [12] $end
$var wire 1 0$ acc [13] $end
$var wire 1 1$ acc [14] $end
$var wire 1 2$ acc [15] $end
$var wire 1 3$ acc [16] $end
$var wire 1 4$ acc [17] $end
$var wire 1 5$ acc [18] $end
$var wire 1 6$ acc [19] $end
$var wire 1 7$ acc [20] $end
$var wire 1 8$ acc [21] $end
$var wire 1 9$ acc [22] $end
$var wire 1 :$ acc [23] $end
$var wire 1 ;$ acc [24] $end
$var wire 1 <$ acc [25] $end
$var wire 1 =$ acc [26] $end
$var wire 1 >$ acc [27] $end
$var wire 1 ?$ acc [28] $end
$var wire 1 @$ acc [29] $end
$var wire 1 A$ acc [30] $end
$var wire 1 B$ acc [31] $end
$var wire 1 C$ acc [32] $end
$var wire 1 D$ acc [33] $end
$var wire 1 E$ acc [34] $end
$var wire 1 F$ acc [35] $end
$var wire 1 G$ acc [36] $end
$var wire 1 H$ acc [37] $end
$var wire 1 I$ acc [38] $end
$var wire 1 J$ acc [39] $end
$var wire 1 K$ acc [40] $end
$var wire 1 L$ acc [41] $end
$var wire 1 M$ acc [42] $end
$var wire 1 N$ acc [43] $end
$var wire 1 O$ acc [44] $end
$var wire 1 P$ acc [45] $end
$var wire 1 Q$ acc [46] $end
$var wire 1 R$ acc [47] $end
$var wire 1 S$ acc [48] $end
$var wire 1 T$ acc [49] $end
$var wire 1 U$ acc [50] $end
$var wire 1 V$ acc [51] $end
$var wire 1 W$ acc [52] $end
$var wire 1 X$ acc [53] $end
$var wire 1 Y$ acc [54] $end
$var wire 1 Z$ acc [55] $end
$var wire 1 [$ acc [56] $end
$var wire 1 \$ acc [57] $end
$var wire 1 ]$ acc [58] $end
$var wire 1 ^$ acc [59] $end
$var wire 1 _$ acc [60] $end
$var wire 1 `$ acc [61] $end
$var wire 1 a$ acc [62] $end
$var wire 1 b$ acc [63] $end
$var wire 1 c$ mac [0] $end
$var wire 1 d$ mac [1] $end
$var wire 1 e$ mac [2] $end
$var wire 1 f$ mac [3] $end
$var wire 1 g$ mac [4] $end
$var wire 1 h$ mac [5] $end
$var wire 1 i$ mac [6] $end
$var wire 1 j$ mac [7] $end
$var wire 1 k$ mac [8] $end
$var wire 1 l$ mac [9] $end
$var wire 1 m$ mac [10] $end
$var wire 1 n$ mac [11] $end
$var wire 1 o$ mac [12] $end
$var wire 1 p$ mac [13] $end
$var wire 1 q$ mac [14] $end
$var wire 1 r$ mac [15] $end
$var wire 1 s$ mac [16] $end
$var wire 1 t$ mac [17] $end
$var wire 1 u$ mac [18] $end
$var wire 1 v$ mac [19] $end
$var wire 1 w$ mac [20] $end
$var wire 1 x$ mac [21] $end
$var wire 1 y$ mac [22] $end
$var wire 1 z$ mac [23] $end
$var wire 1 {$ mac [24] $end
$var wire 1 |$ mac [25] $end
$var wire 1 }$ mac [26] $end
$var wire 1 ~$ mac [27] $end
$var wire 1 !% mac [28] $end
$var wire 1 "% mac [29] $end
$var wire 1 #% mac [30] $end
$var wire 1 $% mac [31] $end
$var wire 1 %% mac [32] $end
$var wire 1 &% mac [33] $end
$var wire 1 '% mac [34] $end
$var wire 1 (% mac [35] $end
$var wire 1 )% mac [36] $end
$var wire 1 *% mac [37] $end
$var wire 1 +% mac [38] $end
$var wire 1 ,% mac [39] $end
$var wire 1 -% mac [40] $end
$var wire 1 .% mac [41] $end
$var wire 1 /% mac [42] $end
$var wire 1 0% mac [43] $end
$var wire 1 1% mac [44] $end
$var wire 1 2% mac [45] $end
$var wire 1 3% mac [46] $end
$var wire 1 4% mac [47] $end
$var wire 1 5% mac [48] $end
$var wire 1 6% mac [49] $end
$var wire 1 7% mac [50] $end
$var wire 1 8% mac [51] $end
$var wire 1 9% mac [52] $end
$var wire 1 :% mac [53] $end
$var wire 1 ;% mac [54] $end
$var wire 1 <% mac [55] $end
$var wire 1 =% mac [56] $end
$var wire 1 >% mac [57] $end
$var wire 1 ?% mac [58] $end
$var wire 1 @% mac [59] $end
$var wire 1 A% mac [60] $end
$var wire 1 B% mac [61] $end
$var wire 1 C% mac [62] $end
$var wire 1 D% mac [63] $end
$var wire 1 E% prod [0] $end
$var wire 1 F% prod [1] $end
$var wire 1 G% prod [2] $end
$var wire 1 H% prod [3] $end
$var wire 1 I% prod [4] $end
$var wire 1 J% prod [5] $end
$var wire 1 K% prod [6] $end
$var wire 1 L% prod [7] $end
$var wire 1 M% prod [8] $end
$var wire 1 N% prod [9] $end
$var wire 1 O% prod [10] $end
$var wire 1 P% prod [11] $end
$var wire 1 Q% prod [12] $end
$var wire 1 R% prod [13] $end
$var wire 1 S% prod [14] $end
$var wire 1 T% prod [15] $end
$var wire 1 U% prod [16] $end
$var wire 1 V% prod [17] $end
$var wire 1 W% prod [18] $end
$var wire 1 X% prod [19] $end
$var wire 1 Y% prod [20] $end
$var wire 1 Z% prod [21] $end
$var wire 1 [% prod [22] $end
$var wire 1 \% prod [23] $end
$var wire 1 ]% prod [24] $end
$var wire 1 ^% prod [25] $end
$var wire 1 _% prod [26] $end
$var wire 1 `% prod [27] $end
$var wire 1 a% prod [28] $end
$var wire 1 b% prod [29] $end
$var wire 1 c% prod [30] $end
$var wire 1 d% prod [31] $end
$var wire 1 e% prod [32] $end
$var wire 1 f% prod [33] $end
$var wire 1 g% prod [34] $end
$var wire 1 h% prod [35] $end
$var wire 1 i% prod [36] $end
$var wire 1 j% prod [37] $end
$var wire 1 k% prod [38] $end
$var wire 1 l% prod [39] $end
$var wire 1 m% prod [40] $end
$var wire 1 n% prod [41] $end
$var wire 1 o% prod [42] $end
$var wire 1 p% prod [43] $end
$var wire 1 q% prod [44] $end
$var wire 1 r% prod [45] $end
$var wire 1 s% prod [46] $end
$var wire 1 t% prod [47] $end
$var wire 1 u% prod [48] $end
$var wire 1 v% prod [49] $end
$var wire 1 w% prod [50] $end
$var wire 1 x% prod [51] $end
$var wire 1 y% prod [52] $end
$var wire 1 z% prod [53] $end
$var wire 1 {% prod [54] $end
$var wire 1 |% prod [55] $end
$var wire 1 }% prod [56] $end
$var wire 1 ~% prod [57] $end
$var wire 1 !& prod [58] $end
$var wire 1 "& prod [59] $end
$var wire 1 #& prod [60] $end
$var wire 1 $& prod [61] $end
$var wire 1 %& prod [62] $end
$var wire 1 && prod [63] $end
$var wire 1 '& adder_out [3] $end
$var wire 1 (& adder_out [2] $end
$var wire 1 )& adder_out [1] $end
$var wire 1 *& adder_out [0] $end
$var wire 1 +& adder_out [-1] $end
$var wire 1 ,& adder_out [-2] $end
$var wire 1 -& adder_out [-3] $end
$var wire 1 .& adder_out [-4] $end
$var wire 1 /& adder_out [-5] $end
$var wire 1 0& adder_out [-6] $end
$var wire 1 1& adder_out [-7] $end
$var wire 1 2& adder_out [-8] $end
$var wire 1 3& adder_out [-9] $end
$var wire 1 4& adder_out [-10] $end
$var wire 1 5& adder_out [-11] $end
$var wire 1 6& adder_out [-12] $end
$var wire 1 7& serializer_out [3] $end
$var wire 1 8& serializer_out [2] $end
$var wire 1 9& serializer_out [1] $end
$var wire 1 :& serializer_out [0] $end
$var wire 1 ;& serializer_out [-1] $end
$var wire 1 <& serializer_out [-2] $end
$var wire 1 =& serializer_out [-3] $end
$var wire 1 >& serializer_out [-4] $end
$var wire 1 ?& serializer_out [-5] $end
$var wire 1 @& serializer_out [-6] $end
$var wire 1 A& serializer_out [-7] $end
$var wire 1 B& serializer_out [-8] $end
$var wire 1 C& serializer_out [-9] $end
$var wire 1 D& serializer_out [-10] $end
$var wire 1 E& serializer_out [-11] $end
$var wire 1 F& serializer_out [-12] $end
$var wire 1 G& act_input [3] $end
$var wire 1 H& act_input [2] $end
$var wire 1 I& act_input [1] $end
$var wire 1 J& act_input [0] $end
$var wire 1 K& act_input [-1] $end
$var wire 1 L& act_input [-2] $end
$var wire 1 M& act_input [-3] $end
$var wire 1 N& act_input [-4] $end
$var wire 1 O& act_input [-5] $end
$var wire 1 P& act_input [-6] $end
$var wire 1 Q& act_input [-7] $end
$var wire 1 R& act_input [-8] $end
$var wire 1 S& act_input [-9] $end
$var wire 1 T& act_input [-10] $end
$var wire 1 U& act_input [-11] $end
$var wire 1 V& act_input [-12] $end
$var wire 1 W& act_ouput [3] $end
$var wire 1 X& act_ouput [2] $end
$var wire 1 Y& act_ouput [1] $end
$var wire 1 Z& act_ouput [0] $end
$var wire 1 [& act_ouput [-1] $end
$var wire 1 \& act_ouput [-2] $end
$var wire 1 ]& act_ouput [-3] $end
$var wire 1 ^& act_ouput [-4] $end
$var wire 1 _& act_ouput [-5] $end
$var wire 1 `& act_ouput [-6] $end
$var wire 1 a& act_ouput [-7] $end
$var wire 1 b& act_ouput [-8] $end
$var wire 1 c& act_ouput [-9] $end
$var wire 1 d& act_ouput [-10] $end
$var wire 1 e& act_ouput [-11] $end
$var wire 1 f& act_ouput [-12] $end
$var wire 1 g& act_mask [1] $end
$var wire 1 h& act_mask [0] $end
$var wire 1 i& xy_writeback [3] $end
$var wire 1 j& xy_writeback [2] $end
$var wire 1 k& xy_writeback [1] $end
$var wire 1 l& xy_writeback [0] $end
$var wire 1 m& xy_writeback [-1] $end
$var wire 1 n& xy_writeback [-2] $end
$var wire 1 o& xy_writeback [-3] $end
$var wire 1 p& xy_writeback [-4] $end
$var wire 1 q& xy_writeback [-5] $end
$var wire 1 r& xy_writeback [-6] $end
$var wire 1 s& xy_writeback [-7] $end
$var wire 1 t& xy_writeback [-8] $end
$var wire 1 u& xy_writeback [-9] $end
$var wire 1 v& xy_writeback [-10] $end
$var wire 1 w& xy_writeback [-11] $end
$var wire 1 x& xy_writeback [-12] $end
$var wire 1 y& xy_acc [3] $end
$var wire 1 z& xy_acc [2] $end
$var wire 1 {& xy_acc [1] $end
$var wire 1 |& xy_acc [0] $end
$var wire 1 }& xy_acc [-1] $end
$var wire 1 ~& xy_acc [-2] $end
$var wire 1 !' xy_acc [-3] $end
$var wire 1 "' xy_acc [-4] $end
$var wire 1 #' xy_acc [-5] $end
$var wire 1 $' xy_acc [-6] $end
$var wire 1 %' xy_acc [-7] $end
$var wire 1 &' xy_acc [-8] $end
$var wire 1 '' xy_acc [-9] $end
$var wire 1 (' xy_acc [-10] $end
$var wire 1 )' xy_acc [-11] $end
$var wire 1 *' xy_acc [-12] $end
$var wire 1 +' act_addr [5] $end
$var wire 1 ,' act_addr [4] $end
$var wire 1 -' act_addr [3] $end
$var wire 1 .' act_addr [2] $end
$var wire 1 /' act_addr [1] $end
$var wire 1 0' act_addr [0] $end
$var wire 1 1' act_write_data [31] $end
$var wire 1 2' act_write_data [30] $end
$var wire 1 3' act_write_data [29] $end
$var wire 1 4' act_write_data [28] $end
$var wire 1 5' act_write_data [27] $end
$var wire 1 6' act_write_data [26] $end
$var wire 1 7' act_write_data [25] $end
$var wire 1 8' act_write_data [24] $end
$var wire 1 9' act_write_data [23] $end
$var wire 1 :' act_write_data [22] $end
$var wire 1 ;' act_write_data [21] $end
$var wire 1 <' act_write_data [20] $end
$var wire 1 =' act_write_data [19] $end
$var wire 1 >' act_write_data [18] $end
$var wire 1 ?' act_write_data [17] $end
$var wire 1 @' act_write_data [16] $end
$var wire 1 A' act_write_data [15] $end
$var wire 1 B' act_write_data [14] $end
$var wire 1 C' act_write_data [13] $end
$var wire 1 D' act_write_data [12] $end
$var wire 1 E' act_write_data [11] $end
$var wire 1 F' act_write_data [10] $end
$var wire 1 G' act_write_data [9] $end
$var wire 1 H' act_write_data [8] $end
$var wire 1 I' act_write_data [7] $end
$var wire 1 J' act_write_data [6] $end
$var wire 1 K' act_write_data [5] $end
$var wire 1 L' act_write_data [4] $end
$var wire 1 M' act_write_data [3] $end
$var wire 1 N' act_write_data [2] $end
$var wire 1 O' act_write_data [1] $end
$var wire 1 P' act_write_data [0] $end
$var wire 1 Q' act_write_enable $end

$scope begin mac_gen[3] $end
$var parameter 32 R' i $end

$scope module w_mem $end
$var parameter 32 S' DEPTH $end
$var parameter 32 T' BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 D% data_in [15] $end
$var wire 1 C% data_in [14] $end
$var wire 1 B% data_in [13] $end
$var wire 1 A% data_in [12] $end
$var wire 1 @% data_in [11] $end
$var wire 1 ?% data_in [10] $end
$var wire 1 >% data_in [9] $end
$var wire 1 =% data_in [8] $end
$var wire 1 <% data_in [7] $end
$var wire 1 ;% data_in [6] $end
$var wire 1 :% data_in [5] $end
$var wire 1 9% data_in [4] $end
$var wire 1 8% data_in [3] $end
$var wire 1 7% data_in [2] $end
$var wire 1 6% data_in [1] $end
$var wire 1 5% data_in [0] $end
$var wire 1 "$ data_out [15] $end
$var wire 1 !$ data_out [14] $end
$var wire 1 ~# data_out [13] $end
$var wire 1 }# data_out [12] $end
$var wire 1 |# data_out [11] $end
$var wire 1 {# data_out [10] $end
$var wire 1 z# data_out [9] $end
$var wire 1 y# data_out [8] $end
$var wire 1 x# data_out [7] $end
$var wire 1 w# data_out [6] $end
$var wire 1 v# data_out [5] $end
$var wire 1 u# data_out [4] $end
$var wire 1 t# data_out [3] $end
$var wire 1 s# data_out [2] $end
$var wire 1 r# data_out [1] $end
$var wire 1 q# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var parameter 32 U' Q_SIZE $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 ;" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 "$ w [3] $end
$var wire 1 !$ w [2] $end
$var wire 1 ~# w [1] $end
$var wire 1 }# w [0] $end
$var wire 1 |# w [-1] $end
$var wire 1 {# w [-2] $end
$var wire 1 z# w [-3] $end
$var wire 1 y# w [-4] $end
$var wire 1 x# w [-5] $end
$var wire 1 w# w [-6] $end
$var wire 1 v# w [-7] $end
$var wire 1 u# w [-8] $end
$var wire 1 t# w [-9] $end
$var wire 1 s# w [-10] $end
$var wire 1 r# w [-11] $end
$var wire 1 q# w [-12] $end
$var reg 16 V' prod [3:-12] $end
$var reg 16 W' acc [3:-12] $end
$var reg 16 X' mac [3:-12] $end
$var reg 16 Y' sum [3:-12] $end
$var reg 16 Z' mac_reg [3:-12] $end
$var wire 1 [' prod_full [7] $end
$var wire 1 \' prod_full [6] $end
$var wire 1 ]' prod_full [5] $end
$var wire 1 ^' prod_full [4] $end
$var wire 1 _' prod_full [3] $end
$var wire 1 `' prod_full [2] $end
$var wire 1 a' prod_full [1] $end
$var wire 1 b' prod_full [0] $end
$var wire 1 c' prod_full [-1] $end
$var wire 1 d' prod_full [-2] $end
$var wire 1 e' prod_full [-3] $end
$var wire 1 f' prod_full [-4] $end
$var wire 1 g' prod_full [-5] $end
$var wire 1 h' prod_full [-6] $end
$var wire 1 i' prod_full [-7] $end
$var wire 1 j' prod_full [-8] $end
$var wire 1 k' prod_full [-9] $end
$var wire 1 l' prod_full [-10] $end
$var wire 1 m' prod_full [-11] $end
$var wire 1 n' prod_full [-12] $end
$var wire 1 o' prod_full [-13] $end
$var wire 1 p' prod_full [-14] $end
$var wire 1 q' prod_full [-15] $end
$var wire 1 r' prod_full [-16] $end
$var wire 1 s' prod_full [-17] $end
$var wire 1 t' prod_full [-18] $end
$var wire 1 u' prod_full [-19] $end
$var wire 1 v' prod_full [-20] $end
$var wire 1 w' prod_full [-21] $end
$var wire 1 x' prod_full [-22] $end
$var wire 1 y' prod_full [-23] $end
$var wire 1 z' prod_full [-24] $end
$var wire 1 {' loopback_sum [3] $end
$var wire 1 |' loopback_sum [2] $end
$var wire 1 }' loopback_sum [1] $end
$var wire 1 ~' loopback_sum [0] $end
$var wire 1 !( loopback_sum [-1] $end
$var wire 1 "( loopback_sum [-2] $end
$var wire 1 #( loopback_sum [-3] $end
$var wire 1 $( loopback_sum [-4] $end
$var wire 1 %( loopback_sum [-5] $end
$var wire 1 &( loopback_sum [-6] $end
$var wire 1 '( loopback_sum [-7] $end
$var wire 1 (( loopback_sum [-8] $end
$var wire 1 )( loopback_sum [-9] $end
$var wire 1 *( loopback_sum [-10] $end
$var wire 1 +( loopback_sum [-11] $end
$var wire 1 ,( loopback_sum [-12] $end
$var wire 1 -( sum_pos_overflow $end
$var wire 1 .( sum_neg_overflow $end
$var wire 1 /( prod_pos_overflow $end
$var wire 1 0( prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[2] $end
$var parameter 32 1( i $end

$scope module w_mem $end
$var parameter 32 2( DEPTH $end
$var parameter 32 3( BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 4% data_in [15] $end
$var wire 1 3% data_in [14] $end
$var wire 1 2% data_in [13] $end
$var wire 1 1% data_in [12] $end
$var wire 1 0% data_in [11] $end
$var wire 1 /% data_in [10] $end
$var wire 1 .% data_in [9] $end
$var wire 1 -% data_in [8] $end
$var wire 1 ,% data_in [7] $end
$var wire 1 +% data_in [6] $end
$var wire 1 *% data_in [5] $end
$var wire 1 )% data_in [4] $end
$var wire 1 (% data_in [3] $end
$var wire 1 '% data_in [2] $end
$var wire 1 &% data_in [1] $end
$var wire 1 %% data_in [0] $end
$var wire 1 p# data_out [15] $end
$var wire 1 o# data_out [14] $end
$var wire 1 n# data_out [13] $end
$var wire 1 m# data_out [12] $end
$var wire 1 l# data_out [11] $end
$var wire 1 k# data_out [10] $end
$var wire 1 j# data_out [9] $end
$var wire 1 i# data_out [8] $end
$var wire 1 h# data_out [7] $end
$var wire 1 g# data_out [6] $end
$var wire 1 f# data_out [5] $end
$var wire 1 e# data_out [4] $end
$var wire 1 d# data_out [3] $end
$var wire 1 c# data_out [2] $end
$var wire 1 b# data_out [1] $end
$var wire 1 a# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var parameter 32 4( Q_SIZE $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 <" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 p# w [3] $end
$var wire 1 o# w [2] $end
$var wire 1 n# w [1] $end
$var wire 1 m# w [0] $end
$var wire 1 l# w [-1] $end
$var wire 1 k# w [-2] $end
$var wire 1 j# w [-3] $end
$var wire 1 i# w [-4] $end
$var wire 1 h# w [-5] $end
$var wire 1 g# w [-6] $end
$var wire 1 f# w [-7] $end
$var wire 1 e# w [-8] $end
$var wire 1 d# w [-9] $end
$var wire 1 c# w [-10] $end
$var wire 1 b# w [-11] $end
$var wire 1 a# w [-12] $end
$var reg 16 5( prod [3:-12] $end
$var reg 16 6( acc [3:-12] $end
$var reg 16 7( mac [3:-12] $end
$var reg 16 8( sum [3:-12] $end
$var reg 16 9( mac_reg [3:-12] $end
$var wire 1 :( prod_full [7] $end
$var wire 1 ;( prod_full [6] $end
$var wire 1 <( prod_full [5] $end
$var wire 1 =( prod_full [4] $end
$var wire 1 >( prod_full [3] $end
$var wire 1 ?( prod_full [2] $end
$var wire 1 @( prod_full [1] $end
$var wire 1 A( prod_full [0] $end
$var wire 1 B( prod_full [-1] $end
$var wire 1 C( prod_full [-2] $end
$var wire 1 D( prod_full [-3] $end
$var wire 1 E( prod_full [-4] $end
$var wire 1 F( prod_full [-5] $end
$var wire 1 G( prod_full [-6] $end
$var wire 1 H( prod_full [-7] $end
$var wire 1 I( prod_full [-8] $end
$var wire 1 J( prod_full [-9] $end
$var wire 1 K( prod_full [-10] $end
$var wire 1 L( prod_full [-11] $end
$var wire 1 M( prod_full [-12] $end
$var wire 1 N( prod_full [-13] $end
$var wire 1 O( prod_full [-14] $end
$var wire 1 P( prod_full [-15] $end
$var wire 1 Q( prod_full [-16] $end
$var wire 1 R( prod_full [-17] $end
$var wire 1 S( prod_full [-18] $end
$var wire 1 T( prod_full [-19] $end
$var wire 1 U( prod_full [-20] $end
$var wire 1 V( prod_full [-21] $end
$var wire 1 W( prod_full [-22] $end
$var wire 1 X( prod_full [-23] $end
$var wire 1 Y( prod_full [-24] $end
$var wire 1 Z( loopback_sum [3] $end
$var wire 1 [( loopback_sum [2] $end
$var wire 1 \( loopback_sum [1] $end
$var wire 1 ]( loopback_sum [0] $end
$var wire 1 ^( loopback_sum [-1] $end
$var wire 1 _( loopback_sum [-2] $end
$var wire 1 `( loopback_sum [-3] $end
$var wire 1 a( loopback_sum [-4] $end
$var wire 1 b( loopback_sum [-5] $end
$var wire 1 c( loopback_sum [-6] $end
$var wire 1 d( loopback_sum [-7] $end
$var wire 1 e( loopback_sum [-8] $end
$var wire 1 f( loopback_sum [-9] $end
$var wire 1 g( loopback_sum [-10] $end
$var wire 1 h( loopback_sum [-11] $end
$var wire 1 i( loopback_sum [-12] $end
$var wire 1 j( sum_pos_overflow $end
$var wire 1 k( sum_neg_overflow $end
$var wire 1 l( prod_pos_overflow $end
$var wire 1 m( prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[1] $end
$var parameter 32 n( i $end

$scope module w_mem $end
$var parameter 32 o( DEPTH $end
$var parameter 32 p( BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 $% data_in [15] $end
$var wire 1 #% data_in [14] $end
$var wire 1 "% data_in [13] $end
$var wire 1 !% data_in [12] $end
$var wire 1 ~$ data_in [11] $end
$var wire 1 }$ data_in [10] $end
$var wire 1 |$ data_in [9] $end
$var wire 1 {$ data_in [8] $end
$var wire 1 z$ data_in [7] $end
$var wire 1 y$ data_in [6] $end
$var wire 1 x$ data_in [5] $end
$var wire 1 w$ data_in [4] $end
$var wire 1 v$ data_in [3] $end
$var wire 1 u$ data_in [2] $end
$var wire 1 t$ data_in [1] $end
$var wire 1 s$ data_in [0] $end
$var wire 1 `# data_out [15] $end
$var wire 1 _# data_out [14] $end
$var wire 1 ^# data_out [13] $end
$var wire 1 ]# data_out [12] $end
$var wire 1 \# data_out [11] $end
$var wire 1 [# data_out [10] $end
$var wire 1 Z# data_out [9] $end
$var wire 1 Y# data_out [8] $end
$var wire 1 X# data_out [7] $end
$var wire 1 W# data_out [6] $end
$var wire 1 V# data_out [5] $end
$var wire 1 U# data_out [4] $end
$var wire 1 T# data_out [3] $end
$var wire 1 S# data_out [2] $end
$var wire 1 R# data_out [1] $end
$var wire 1 Q# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var parameter 32 q( Q_SIZE $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 =" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 `# w [3] $end
$var wire 1 _# w [2] $end
$var wire 1 ^# w [1] $end
$var wire 1 ]# w [0] $end
$var wire 1 \# w [-1] $end
$var wire 1 [# w [-2] $end
$var wire 1 Z# w [-3] $end
$var wire 1 Y# w [-4] $end
$var wire 1 X# w [-5] $end
$var wire 1 W# w [-6] $end
$var wire 1 V# w [-7] $end
$var wire 1 U# w [-8] $end
$var wire 1 T# w [-9] $end
$var wire 1 S# w [-10] $end
$var wire 1 R# w [-11] $end
$var wire 1 Q# w [-12] $end
$var reg 16 r( prod [3:-12] $end
$var reg 16 s( acc [3:-12] $end
$var reg 16 t( mac [3:-12] $end
$var reg 16 u( sum [3:-12] $end
$var reg 16 v( mac_reg [3:-12] $end
$var wire 1 w( prod_full [7] $end
$var wire 1 x( prod_full [6] $end
$var wire 1 y( prod_full [5] $end
$var wire 1 z( prod_full [4] $end
$var wire 1 {( prod_full [3] $end
$var wire 1 |( prod_full [2] $end
$var wire 1 }( prod_full [1] $end
$var wire 1 ~( prod_full [0] $end
$var wire 1 !) prod_full [-1] $end
$var wire 1 ") prod_full [-2] $end
$var wire 1 #) prod_full [-3] $end
$var wire 1 $) prod_full [-4] $end
$var wire 1 %) prod_full [-5] $end
$var wire 1 &) prod_full [-6] $end
$var wire 1 ') prod_full [-7] $end
$var wire 1 () prod_full [-8] $end
$var wire 1 )) prod_full [-9] $end
$var wire 1 *) prod_full [-10] $end
$var wire 1 +) prod_full [-11] $end
$var wire 1 ,) prod_full [-12] $end
$var wire 1 -) prod_full [-13] $end
$var wire 1 .) prod_full [-14] $end
$var wire 1 /) prod_full [-15] $end
$var wire 1 0) prod_full [-16] $end
$var wire 1 1) prod_full [-17] $end
$var wire 1 2) prod_full [-18] $end
$var wire 1 3) prod_full [-19] $end
$var wire 1 4) prod_full [-20] $end
$var wire 1 5) prod_full [-21] $end
$var wire 1 6) prod_full [-22] $end
$var wire 1 7) prod_full [-23] $end
$var wire 1 8) prod_full [-24] $end
$var wire 1 9) loopback_sum [3] $end
$var wire 1 :) loopback_sum [2] $end
$var wire 1 ;) loopback_sum [1] $end
$var wire 1 <) loopback_sum [0] $end
$var wire 1 =) loopback_sum [-1] $end
$var wire 1 >) loopback_sum [-2] $end
$var wire 1 ?) loopback_sum [-3] $end
$var wire 1 @) loopback_sum [-4] $end
$var wire 1 A) loopback_sum [-5] $end
$var wire 1 B) loopback_sum [-6] $end
$var wire 1 C) loopback_sum [-7] $end
$var wire 1 D) loopback_sum [-8] $end
$var wire 1 E) loopback_sum [-9] $end
$var wire 1 F) loopback_sum [-10] $end
$var wire 1 G) loopback_sum [-11] $end
$var wire 1 H) loopback_sum [-12] $end
$var wire 1 I) sum_pos_overflow $end
$var wire 1 J) sum_neg_overflow $end
$var wire 1 K) prod_pos_overflow $end
$var wire 1 L) prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[0] $end
$var parameter 32 M) i $end

$scope module w_mem $end
$var parameter 32 N) DEPTH $end
$var parameter 32 O) BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 r$ data_in [15] $end
$var wire 1 q$ data_in [14] $end
$var wire 1 p$ data_in [13] $end
$var wire 1 o$ data_in [12] $end
$var wire 1 n$ data_in [11] $end
$var wire 1 m$ data_in [10] $end
$var wire 1 l$ data_in [9] $end
$var wire 1 k$ data_in [8] $end
$var wire 1 j$ data_in [7] $end
$var wire 1 i$ data_in [6] $end
$var wire 1 h$ data_in [5] $end
$var wire 1 g$ data_in [4] $end
$var wire 1 f$ data_in [3] $end
$var wire 1 e$ data_in [2] $end
$var wire 1 d$ data_in [1] $end
$var wire 1 c$ data_in [0] $end
$var wire 1 P# data_out [15] $end
$var wire 1 O# data_out [14] $end
$var wire 1 N# data_out [13] $end
$var wire 1 M# data_out [12] $end
$var wire 1 L# data_out [11] $end
$var wire 1 K# data_out [10] $end
$var wire 1 J# data_out [9] $end
$var wire 1 I# data_out [8] $end
$var wire 1 H# data_out [7] $end
$var wire 1 G# data_out [6] $end
$var wire 1 F# data_out [5] $end
$var wire 1 E# data_out [4] $end
$var wire 1 D# data_out [3] $end
$var wire 1 C# data_out [2] $end
$var wire 1 B# data_out [1] $end
$var wire 1 A# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var parameter 32 P) Q_SIZE $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 >" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 P# w [3] $end
$var wire 1 O# w [2] $end
$var wire 1 N# w [1] $end
$var wire 1 M# w [0] $end
$var wire 1 L# w [-1] $end
$var wire 1 K# w [-2] $end
$var wire 1 J# w [-3] $end
$var wire 1 I# w [-4] $end
$var wire 1 H# w [-5] $end
$var wire 1 G# w [-6] $end
$var wire 1 F# w [-7] $end
$var wire 1 E# w [-8] $end
$var wire 1 D# w [-9] $end
$var wire 1 C# w [-10] $end
$var wire 1 B# w [-11] $end
$var wire 1 A# w [-12] $end
$var reg 16 Q) prod [3:-12] $end
$var reg 16 R) acc [3:-12] $end
$var reg 16 S) mac [3:-12] $end
$var reg 16 T) sum [3:-12] $end
$var reg 16 U) mac_reg [3:-12] $end
$var wire 1 V) prod_full [7] $end
$var wire 1 W) prod_full [6] $end
$var wire 1 X) prod_full [5] $end
$var wire 1 Y) prod_full [4] $end
$var wire 1 Z) prod_full [3] $end
$var wire 1 [) prod_full [2] $end
$var wire 1 \) prod_full [1] $end
$var wire 1 ]) prod_full [0] $end
$var wire 1 ^) prod_full [-1] $end
$var wire 1 _) prod_full [-2] $end
$var wire 1 `) prod_full [-3] $end
$var wire 1 a) prod_full [-4] $end
$var wire 1 b) prod_full [-5] $end
$var wire 1 c) prod_full [-6] $end
$var wire 1 d) prod_full [-7] $end
$var wire 1 e) prod_full [-8] $end
$var wire 1 f) prod_full [-9] $end
$var wire 1 g) prod_full [-10] $end
$var wire 1 h) prod_full [-11] $end
$var wire 1 i) prod_full [-12] $end
$var wire 1 j) prod_full [-13] $end
$var wire 1 k) prod_full [-14] $end
$var wire 1 l) prod_full [-15] $end
$var wire 1 m) prod_full [-16] $end
$var wire 1 n) prod_full [-17] $end
$var wire 1 o) prod_full [-18] $end
$var wire 1 p) prod_full [-19] $end
$var wire 1 q) prod_full [-20] $end
$var wire 1 r) prod_full [-21] $end
$var wire 1 s) prod_full [-22] $end
$var wire 1 t) prod_full [-23] $end
$var wire 1 u) prod_full [-24] $end
$var wire 1 v) loopback_sum [3] $end
$var wire 1 w) loopback_sum [2] $end
$var wire 1 x) loopback_sum [1] $end
$var wire 1 y) loopback_sum [0] $end
$var wire 1 z) loopback_sum [-1] $end
$var wire 1 {) loopback_sum [-2] $end
$var wire 1 |) loopback_sum [-3] $end
$var wire 1 }) loopback_sum [-4] $end
$var wire 1 ~) loopback_sum [-5] $end
$var wire 1 !* loopback_sum [-6] $end
$var wire 1 "* loopback_sum [-7] $end
$var wire 1 #* loopback_sum [-8] $end
$var wire 1 $* loopback_sum [-9] $end
$var wire 1 %* loopback_sum [-10] $end
$var wire 1 &* loopback_sum [-11] $end
$var wire 1 '* loopback_sum [-12] $end
$var wire 1 (* sum_pos_overflow $end
$var wire 1 )* sum_neg_overflow $end
$var wire 1 ** prod_pos_overflow $end
$var wire 1 +* prod_neg_overflow $end
$upscope $end
$upscope $end

$scope module xy_mem $end
$var parameter 32 ,* DEPTH $end
$var parameter 32 -* BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 P" write_enable $end
$var wire 1 F" read_addr [4] $end
$var wire 1 G" read_addr [3] $end
$var wire 1 H" read_addr [2] $end
$var wire 1 I" read_addr [1] $end
$var wire 1 J" read_addr [0] $end
$var wire 1 K" write_addr [4] $end
$var wire 1 L" write_addr [3] $end
$var wire 1 M" write_addr [2] $end
$var wire 1 N" write_addr [1] $end
$var wire 1 O" write_addr [0] $end
$var wire 1 i& data_in [15] $end
$var wire 1 j& data_in [14] $end
$var wire 1 k& data_in [13] $end
$var wire 1 l& data_in [12] $end
$var wire 1 m& data_in [11] $end
$var wire 1 n& data_in [10] $end
$var wire 1 o& data_in [9] $end
$var wire 1 p& data_in [8] $end
$var wire 1 q& data_in [7] $end
$var wire 1 r& data_in [6] $end
$var wire 1 s& data_in [5] $end
$var wire 1 t& data_in [4] $end
$var wire 1 u& data_in [3] $end
$var wire 1 v& data_in [2] $end
$var wire 1 w& data_in [1] $end
$var wire 1 x& data_in [0] $end
$var wire 1 1# data_out [15] $end
$var wire 1 2# data_out [14] $end
$var wire 1 3# data_out [13] $end
$var wire 1 4# data_out [12] $end
$var wire 1 5# data_out [11] $end
$var wire 1 6# data_out [10] $end
$var wire 1 7# data_out [9] $end
$var wire 1 8# data_out [8] $end
$var wire 1 9# data_out [7] $end
$var wire 1 :# data_out [6] $end
$var wire 1 ;# data_out [5] $end
$var wire 1 <# data_out [4] $end
$var wire 1 =# data_out [3] $end
$var wire 1 ># data_out [2] $end
$var wire 1 ?# data_out [1] $end
$var wire 1 @# data_out [0] $end
$upscope $end

$scope module adder $end
$var parameter 32 .* Q_SIZE $end
$var parameter 32 /* LENGTH $end
$var wire 1 9" clk $end
$var wire 1 E% x [0] $end
$var wire 1 F% x [1] $end
$var wire 1 G% x [2] $end
$var wire 1 H% x [3] $end
$var wire 1 I% x [4] $end
$var wire 1 J% x [5] $end
$var wire 1 K% x [6] $end
$var wire 1 L% x [7] $end
$var wire 1 M% x [8] $end
$var wire 1 N% x [9] $end
$var wire 1 O% x [10] $end
$var wire 1 P% x [11] $end
$var wire 1 Q% x [12] $end
$var wire 1 R% x [13] $end
$var wire 1 S% x [14] $end
$var wire 1 T% x [15] $end
$var wire 1 U% x [16] $end
$var wire 1 V% x [17] $end
$var wire 1 W% x [18] $end
$var wire 1 X% x [19] $end
$var wire 1 Y% x [20] $end
$var wire 1 Z% x [21] $end
$var wire 1 [% x [22] $end
$var wire 1 \% x [23] $end
$var wire 1 ]% x [24] $end
$var wire 1 ^% x [25] $end
$var wire 1 _% x [26] $end
$var wire 1 `% x [27] $end
$var wire 1 a% x [28] $end
$var wire 1 b% x [29] $end
$var wire 1 c% x [30] $end
$var wire 1 d% x [31] $end
$var wire 1 e% x [32] $end
$var wire 1 f% x [33] $end
$var wire 1 g% x [34] $end
$var wire 1 h% x [35] $end
$var wire 1 i% x [36] $end
$var wire 1 j% x [37] $end
$var wire 1 k% x [38] $end
$var wire 1 l% x [39] $end
$var wire 1 m% x [40] $end
$var wire 1 n% x [41] $end
$var wire 1 o% x [42] $end
$var wire 1 p% x [43] $end
$var wire 1 q% x [44] $end
$var wire 1 r% x [45] $end
$var wire 1 s% x [46] $end
$var wire 1 t% x [47] $end
$var wire 1 u% x [48] $end
$var wire 1 v% x [49] $end
$var wire 1 w% x [50] $end
$var wire 1 x% x [51] $end
$var wire 1 y% x [52] $end
$var wire 1 z% x [53] $end
$var wire 1 {% x [54] $end
$var wire 1 |% x [55] $end
$var wire 1 }% x [56] $end
$var wire 1 ~% x [57] $end
$var wire 1 !& x [58] $end
$var wire 1 "& x [59] $end
$var wire 1 #& x [60] $end
$var wire 1 $& x [61] $end
$var wire 1 %& x [62] $end
$var wire 1 && x [63] $end
$var wire 1 '& y [15] $end
$var wire 1 (& y [14] $end
$var wire 1 )& y [13] $end
$var wire 1 *& y [12] $end
$var wire 1 +& y [11] $end
$var wire 1 ,& y [10] $end
$var wire 1 -& y [9] $end
$var wire 1 .& y [8] $end
$var wire 1 /& y [7] $end
$var wire 1 0& y [6] $end
$var wire 1 1& y [5] $end
$var wire 1 2& y [4] $end
$var wire 1 3& y [3] $end
$var wire 1 4& y [2] $end
$var wire 1 5& y [1] $end
$var wire 1 6& y [0] $end
$var wire 1 0* s [0] $end
$var wire 1 1* s [1] $end
$var wire 1 2* s [2] $end
$var wire 1 3* s [3] $end
$var wire 1 4* s [4] $end
$var wire 1 5* s [5] $end
$var wire 1 6* s [6] $end
$var wire 1 7* s [7] $end
$var wire 1 8* s [8] $end
$var wire 1 9* s [9] $end
$var wire 1 :* s [10] $end
$var wire 1 ;* s [11] $end
$var wire 1 <* s [12] $end
$var wire 1 =* s [13] $end
$var wire 1 >* s [14] $end
$var wire 1 ?* s [15] $end
$var wire 1 @* s [16] $end
$var wire 1 A* s [17] $end
$var wire 1 B* s [18] $end
$var wire 1 C* s [19] $end
$var wire 1 D* s [20] $end
$var wire 1 E* s [21] $end
$var wire 1 F* s [22] $end
$var wire 1 G* s [23] $end
$var wire 1 H* s [24] $end
$var wire 1 I* s [25] $end
$var wire 1 J* s [26] $end
$var wire 1 K* s [27] $end
$var wire 1 L* s [28] $end
$var wire 1 M* s [29] $end
$var wire 1 N* s [30] $end
$var wire 1 O* s [31] $end
$var wire 1 P* s [32] $end
$var wire 1 Q* s [33] $end
$var wire 1 R* s [34] $end
$var wire 1 S* s [35] $end
$var wire 1 T* s [36] $end
$var wire 1 U* s [37] $end
$var wire 1 V* s [38] $end
$var wire 1 W* s [39] $end
$var wire 1 X* s [40] $end
$var wire 1 Y* s [41] $end
$var wire 1 Z* s [42] $end
$var wire 1 [* s [43] $end
$var wire 1 \* s [44] $end
$var wire 1 ]* s [45] $end
$var wire 1 ^* s [46] $end
$var wire 1 _* s [47] $end
$var wire 1 `* s [48] $end
$var wire 1 a* s [49] $end
$var wire 1 b* s [50] $end
$var wire 1 c* s [51] $end
$var wire 1 d* s [52] $end
$var wire 1 e* s [53] $end
$var wire 1 f* s [54] $end
$var wire 1 g* s [55] $end
$var wire 1 h* s [56] $end
$var wire 1 i* s [57] $end
$var wire 1 j* s [58] $end
$var wire 1 k* s [59] $end
$var wire 1 l* s [60] $end
$var wire 1 m* s [61] $end
$var wire 1 n* s [62] $end
$var wire 1 o* s [63] $end
$var wire 1 p* s [64] $end
$var wire 1 q* s [65] $end
$var wire 1 r* s [66] $end
$var wire 1 s* s [67] $end
$var wire 1 t* s [68] $end
$var wire 1 u* s [69] $end
$var wire 1 v* s [70] $end
$var wire 1 w* s [71] $end
$var wire 1 x* s [72] $end
$var wire 1 y* s [73] $end
$var wire 1 z* s [74] $end
$var wire 1 {* s [75] $end
$var wire 1 |* s [76] $end
$var wire 1 }* s [77] $end
$var wire 1 ~* s [78] $end
$var wire 1 !+ s [79] $end
$var wire 1 "+ s [80] $end
$var wire 1 #+ s [81] $end
$var wire 1 $+ s [82] $end
$var wire 1 %+ s [83] $end
$var wire 1 &+ s [84] $end
$var wire 1 '+ s [85] $end
$var wire 1 (+ s [86] $end
$var wire 1 )+ s [87] $end
$var wire 1 *+ s [88] $end
$var wire 1 ++ s [89] $end
$var wire 1 ,+ s [90] $end
$var wire 1 -+ s [91] $end
$var wire 1 .+ s [92] $end
$var wire 1 /+ s [93] $end
$var wire 1 0+ s [94] $end
$var wire 1 1+ s [95] $end
$var wire 1 2+ s [96] $end
$var wire 1 3+ s [97] $end
$var wire 1 4+ s [98] $end
$var wire 1 5+ s [99] $end
$var wire 1 6+ s [100] $end
$var wire 1 7+ s [101] $end
$var wire 1 8+ s [102] $end
$var wire 1 9+ s [103] $end
$var wire 1 :+ s [104] $end
$var wire 1 ;+ s [105] $end
$var wire 1 <+ s [106] $end
$var wire 1 =+ s [107] $end
$var wire 1 >+ s [108] $end
$var wire 1 ?+ s [109] $end
$var wire 1 @+ s [110] $end
$var wire 1 A+ s [111] $end

$scope begin sum_input[7] $end
$var parameter 32 B+ i $end
$upscope $end

$scope begin sum_input[6] $end
$var parameter 32 C+ i $end
$upscope $end

$scope begin sum_input[5] $end
$var parameter 32 D+ i $end
$upscope $end

$scope begin sum_input[4] $end
$var parameter 32 E+ i $end
$upscope $end

$scope begin sum_gen[3] $end
$var parameter 32 F+ i $end
$upscope $end

$scope begin sum_gen[2] $end
$var parameter 32 G+ i $end
$upscope $end

$scope begin sum_gen[1] $end
$var parameter 32 H+ i $end
$upscope $end
$upscope $end

$scope module serializer $end
$var parameter 32 I+ INPUT_SIZE $end
$var parameter 32 J+ Q_SIZE $end
$var wire 1 9" clk $end
$var wire 1 C" serializer_update $end
$var wire 1 #$ data_in [0] $end
$var wire 1 $$ data_in [1] $end
$var wire 1 %$ data_in [2] $end
$var wire 1 &$ data_in [3] $end
$var wire 1 '$ data_in [4] $end
$var wire 1 ($ data_in [5] $end
$var wire 1 )$ data_in [6] $end
$var wire 1 *$ data_in [7] $end
$var wire 1 +$ data_in [8] $end
$var wire 1 ,$ data_in [9] $end
$var wire 1 -$ data_in [10] $end
$var wire 1 .$ data_in [11] $end
$var wire 1 /$ data_in [12] $end
$var wire 1 0$ data_in [13] $end
$var wire 1 1$ data_in [14] $end
$var wire 1 2$ data_in [15] $end
$var wire 1 3$ data_in [16] $end
$var wire 1 4$ data_in [17] $end
$var wire 1 5$ data_in [18] $end
$var wire 1 6$ data_in [19] $end
$var wire 1 7$ data_in [20] $end
$var wire 1 8$ data_in [21] $end
$var wire 1 9$ data_in [22] $end
$var wire 1 :$ data_in [23] $end
$var wire 1 ;$ data_in [24] $end
$var wire 1 <$ data_in [25] $end
$var wire 1 =$ data_in [26] $end
$var wire 1 >$ data_in [27] $end
$var wire 1 ?$ data_in [28] $end
$var wire 1 @$ data_in [29] $end
$var wire 1 A$ data_in [30] $end
$var wire 1 B$ data_in [31] $end
$var wire 1 C$ data_in [32] $end
$var wire 1 D$ data_in [33] $end
$var wire 1 E$ data_in [34] $end
$var wire 1 F$ data_in [35] $end
$var wire 1 G$ data_in [36] $end
$var wire 1 H$ data_in [37] $end
$var wire 1 I$ data_in [38] $end
$var wire 1 J$ data_in [39] $end
$var wire 1 K$ data_in [40] $end
$var wire 1 L$ data_in [41] $end
$var wire 1 M$ data_in [42] $end
$var wire 1 N$ data_in [43] $end
$var wire 1 O$ data_in [44] $end
$var wire 1 P$ data_in [45] $end
$var wire 1 Q$ data_in [46] $end
$var wire 1 R$ data_in [47] $end
$var wire 1 S$ data_in [48] $end
$var wire 1 T$ data_in [49] $end
$var wire 1 U$ data_in [50] $end
$var wire 1 V$ data_in [51] $end
$var wire 1 W$ data_in [52] $end
$var wire 1 X$ data_in [53] $end
$var wire 1 Y$ data_in [54] $end
$var wire 1 Z$ data_in [55] $end
$var wire 1 [$ data_in [56] $end
$var wire 1 \$ data_in [57] $end
$var wire 1 ]$ data_in [58] $end
$var wire 1 ^$ data_in [59] $end
$var wire 1 _$ data_in [60] $end
$var wire 1 `$ data_in [61] $end
$var wire 1 a$ data_in [62] $end
$var wire 1 b$ data_in [63] $end
$var wire 1 7& serial_out [15] $end
$var wire 1 8& serial_out [14] $end
$var wire 1 9& serial_out [13] $end
$var wire 1 :& serial_out [12] $end
$var wire 1 ;& serial_out [11] $end
$var wire 1 <& serial_out [10] $end
$var wire 1 =& serial_out [9] $end
$var wire 1 >& serial_out [8] $end
$var wire 1 ?& serial_out [7] $end
$var wire 1 @& serial_out [6] $end
$var wire 1 A& serial_out [5] $end
$var wire 1 B& serial_out [4] $end
$var wire 1 C& serial_out [3] $end
$var wire 1 D& serial_out [2] $end
$var wire 1 E& serial_out [1] $end
$var wire 1 F& serial_out [0] $end
$var reg 64 K+ data [63:0] $end
$upscope $end

$scope module activation_function $end
$var wire 1 9" clk $end
$var wire 1 Q' write_enable $end
$var wire 1 +' write_addr [5] $end
$var wire 1 ,' write_addr [4] $end
$var wire 1 -' write_addr [3] $end
$var wire 1 .' write_addr [2] $end
$var wire 1 /' write_addr [1] $end
$var wire 1 0' write_addr [0] $end
$var wire 1 1' write_data [31] $end
$var wire 1 2' write_data [30] $end
$var wire 1 3' write_data [29] $end
$var wire 1 4' write_data [28] $end
$var wire 1 5' write_data [27] $end
$var wire 1 6' write_data [26] $end
$var wire 1 7' write_data [25] $end
$var wire 1 8' write_data [24] $end
$var wire 1 9' write_data [23] $end
$var wire 1 :' write_data [22] $end
$var wire 1 ;' write_data [21] $end
$var wire 1 <' write_data [20] $end
$var wire 1 =' write_data [19] $end
$var wire 1 >' write_data [18] $end
$var wire 1 ?' write_data [17] $end
$var wire 1 @' write_data [16] $end
$var wire 1 A' write_data [15] $end
$var wire 1 B' write_data [14] $end
$var wire 1 C' write_data [13] $end
$var wire 1 D' write_data [12] $end
$var wire 1 E' write_data [11] $end
$var wire 1 F' write_data [10] $end
$var wire 1 G' write_data [9] $end
$var wire 1 H' write_data [8] $end
$var wire 1 I' write_data [7] $end
$var wire 1 J' write_data [6] $end
$var wire 1 K' write_data [5] $end
$var wire 1 L' write_data [4] $end
$var wire 1 M' write_data [3] $end
$var wire 1 N' write_data [2] $end
$var wire 1 O' write_data [1] $end
$var wire 1 P' write_data [0] $end
$var wire 1 G& x [3] $end
$var wire 1 H& x [2] $end
$var wire 1 I& x [1] $end
$var wire 1 J& x [0] $end
$var wire 1 K& x [-1] $end
$var wire 1 L& x [-2] $end
$var wire 1 M& x [-3] $end
$var wire 1 N& x [-4] $end
$var wire 1 O& x [-5] $end
$var wire 1 P& x [-6] $end
$var wire 1 Q& x [-7] $end
$var wire 1 R& x [-8] $end
$var wire 1 S& x [-9] $end
$var wire 1 T& x [-10] $end
$var wire 1 U& x [-11] $end
$var wire 1 V& x [-12] $end
$var wire 1 E" act_bypass $end
$var wire 1 g& mask [1] $end
$var wire 1 h& mask [0] $end
$var wire 1 W& fx [3] $end
$var wire 1 X& fx [2] $end
$var wire 1 Y& fx [1] $end
$var wire 1 Z& fx [0] $end
$var wire 1 [& fx [-1] $end
$var wire 1 \& fx [-2] $end
$var wire 1 ]& fx [-3] $end
$var wire 1 ^& fx [-4] $end
$var wire 1 _& fx [-5] $end
$var wire 1 `& fx [-6] $end
$var wire 1 a& fx [-7] $end
$var wire 1 b& fx [-8] $end
$var wire 1 c& fx [-9] $end
$var wire 1 d& fx [-10] $end
$var wire 1 e& fx [-11] $end
$var wire 1 f& fx [-12] $end
$var wire 1 L+ a_coef [3] $end
$var wire 1 M+ a_coef [2] $end
$var wire 1 N+ a_coef [1] $end
$var wire 1 O+ a_coef [0] $end
$var wire 1 P+ a_coef [-1] $end
$var wire 1 Q+ a_coef [-2] $end
$var wire 1 R+ a_coef [-3] $end
$var wire 1 S+ a_coef [-4] $end
$var wire 1 T+ a_coef [-5] $end
$var wire 1 U+ a_coef [-6] $end
$var wire 1 V+ a_coef [-7] $end
$var wire 1 W+ a_coef [-8] $end
$var wire 1 X+ a_coef [-9] $end
$var wire 1 Y+ a_coef [-10] $end
$var wire 1 Z+ a_coef [-11] $end
$var wire 1 [+ a_coef [-12] $end
$var wire 1 \+ b_coef [3] $end
$var wire 1 ]+ b_coef [2] $end
$var wire 1 ^+ b_coef [1] $end
$var wire 1 _+ b_coef [0] $end
$var wire 1 `+ b_coef [-1] $end
$var wire 1 a+ b_coef [-2] $end
$var wire 1 b+ b_coef [-3] $end
$var wire 1 c+ b_coef [-4] $end
$var wire 1 d+ b_coef [-5] $end
$var wire 1 e+ b_coef [-6] $end
$var wire 1 f+ b_coef [-7] $end
$var wire 1 g+ b_coef [-8] $end
$var wire 1 h+ b_coef [-9] $end
$var wire 1 i+ b_coef [-10] $end
$var wire 1 j+ b_coef [-11] $end
$var wire 1 k+ b_coef [-12] $end
$var wire 1 l+ full_product [7] $end
$var wire 1 m+ full_product [6] $end
$var wire 1 n+ full_product [5] $end
$var wire 1 o+ full_product [4] $end
$var wire 1 p+ full_product [3] $end
$var wire 1 q+ full_product [2] $end
$var wire 1 r+ full_product [1] $end
$var wire 1 s+ full_product [0] $end
$var wire 1 t+ full_product [-1] $end
$var wire 1 u+ full_product [-2] $end
$var wire 1 v+ full_product [-3] $end
$var wire 1 w+ full_product [-4] $end
$var wire 1 x+ full_product [-5] $end
$var wire 1 y+ full_product [-6] $end
$var wire 1 z+ full_product [-7] $end
$var wire 1 {+ full_product [-8] $end
$var wire 1 |+ full_product [-9] $end
$var wire 1 }+ full_product [-10] $end
$var wire 1 ~+ full_product [-11] $end
$var wire 1 !, full_product [-12] $end
$var wire 1 ", full_product [-13] $end
$var wire 1 #, full_product [-14] $end
$var wire 1 $, full_product [-15] $end
$var wire 1 %, full_product [-16] $end
$var wire 1 &, full_product [-17] $end
$var wire 1 ', full_product [-18] $end
$var wire 1 (, full_product [-19] $end
$var wire 1 ), full_product [-20] $end
$var wire 1 *, full_product [-21] $end
$var wire 1 +, full_product [-22] $end
$var wire 1 ,, full_product [-23] $end
$var wire 1 -, full_product [-24] $end
$var wire 1 ., b_shifted [7] $end
$var wire 1 /, b_shifted [6] $end
$var wire 1 0, b_shifted [5] $end
$var wire 1 1, b_shifted [4] $end
$var wire 1 2, b_shifted [3] $end
$var wire 1 3, b_shifted [2] $end
$var wire 1 4, b_shifted [1] $end
$var wire 1 5, b_shifted [0] $end
$var wire 1 6, b_shifted [-1] $end
$var wire 1 7, b_shifted [-2] $end
$var wire 1 8, b_shifted [-3] $end
$var wire 1 9, b_shifted [-4] $end
$var wire 1 :, b_shifted [-5] $end
$var wire 1 ;, b_shifted [-6] $end
$var wire 1 <, b_shifted [-7] $end
$var wire 1 =, b_shifted [-8] $end
$var wire 1 >, b_shifted [-9] $end
$var wire 1 ?, b_shifted [-10] $end
$var wire 1 @, b_shifted [-11] $end
$var wire 1 A, b_shifted [-12] $end
$var wire 1 B, b_shifted [-13] $end
$var wire 1 C, b_shifted [-14] $end
$var wire 1 D, b_shifted [-15] $end
$var wire 1 E, b_shifted [-16] $end
$var wire 1 F, b_shifted [-17] $end
$var wire 1 G, b_shifted [-18] $end
$var wire 1 H, b_shifted [-19] $end
$var wire 1 I, b_shifted [-20] $end
$var wire 1 J, b_shifted [-21] $end
$var wire 1 K, b_shifted [-22] $end
$var wire 1 L, b_shifted [-23] $end
$var wire 1 M, b_shifted [-24] $end
$var wire 1 N, interp [3] $end
$var wire 1 O, interp [2] $end
$var wire 1 P, interp [1] $end
$var wire 1 Q, interp [0] $end
$var wire 1 R, interp [-1] $end
$var wire 1 S, interp [-2] $end
$var wire 1 T, interp [-3] $end
$var wire 1 U, interp [-4] $end
$var wire 1 V, interp [-5] $end
$var wire 1 W, interp [-6] $end
$var wire 1 X, interp [-7] $end
$var wire 1 Y, interp [-8] $end
$var wire 1 Z, interp [-9] $end
$var wire 1 [, interp [-10] $end
$var wire 1 \, interp [-11] $end
$var wire 1 ], interp [-12] $end

$scope module lookup_table $end
$var parameter 32 ^, DEPTH $end
$var parameter 32 _, BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 Q' write_enable $end
$var wire 1 g& read_addr [7] $end
$var wire 1 h& read_addr [6] $end
$var wire 1 G& read_addr [5] $end
$var wire 1 H& read_addr [4] $end
$var wire 1 I& read_addr [3] $end
$var wire 1 J& read_addr [2] $end
$var wire 1 K& read_addr [1] $end
$var wire 1 L& read_addr [0] $end
$var wire 1 g& write_addr [7] $end
$var wire 1 h& write_addr [6] $end
$var wire 1 +' write_addr [5] $end
$var wire 1 ,' write_addr [4] $end
$var wire 1 -' write_addr [3] $end
$var wire 1 .' write_addr [2] $end
$var wire 1 /' write_addr [1] $end
$var wire 1 0' write_addr [0] $end
$var wire 1 1' data_in [31] $end
$var wire 1 2' data_in [30] $end
$var wire 1 3' data_in [29] $end
$var wire 1 4' data_in [28] $end
$var wire 1 5' data_in [27] $end
$var wire 1 6' data_in [26] $end
$var wire 1 7' data_in [25] $end
$var wire 1 8' data_in [24] $end
$var wire 1 9' data_in [23] $end
$var wire 1 :' data_in [22] $end
$var wire 1 ;' data_in [21] $end
$var wire 1 <' data_in [20] $end
$var wire 1 =' data_in [19] $end
$var wire 1 >' data_in [18] $end
$var wire 1 ?' data_in [17] $end
$var wire 1 @' data_in [16] $end
$var wire 1 A' data_in [15] $end
$var wire 1 B' data_in [14] $end
$var wire 1 C' data_in [13] $end
$var wire 1 D' data_in [12] $end
$var wire 1 E' data_in [11] $end
$var wire 1 F' data_in [10] $end
$var wire 1 G' data_in [9] $end
$var wire 1 H' data_in [8] $end
$var wire 1 I' data_in [7] $end
$var wire 1 J' data_in [6] $end
$var wire 1 K' data_in [5] $end
$var wire 1 L' data_in [4] $end
$var wire 1 M' data_in [3] $end
$var wire 1 N' data_in [2] $end
$var wire 1 O' data_in [1] $end
$var wire 1 P' data_in [0] $end
$var wire 1 L+ data_out [31] $end
$var wire 1 M+ data_out [30] $end
$var wire 1 N+ data_out [29] $end
$var wire 1 O+ data_out [28] $end
$var wire 1 P+ data_out [27] $end
$var wire 1 Q+ data_out [26] $end
$var wire 1 R+ data_out [25] $end
$var wire 1 S+ data_out [24] $end
$var wire 1 T+ data_out [23] $end
$var wire 1 U+ data_out [22] $end
$var wire 1 V+ data_out [21] $end
$var wire 1 W+ data_out [20] $end
$var wire 1 X+ data_out [19] $end
$var wire 1 Y+ data_out [18] $end
$var wire 1 Z+ data_out [17] $end
$var wire 1 [+ data_out [16] $end
$var wire 1 \+ data_out [15] $end
$var wire 1 ]+ data_out [14] $end
$var wire 1 ^+ data_out [13] $end
$var wire 1 _+ data_out [12] $end
$var wire 1 `+ data_out [11] $end
$var wire 1 a+ data_out [10] $end
$var wire 1 b+ data_out [9] $end
$var wire 1 c+ data_out [8] $end
$var wire 1 d+ data_out [7] $end
$var wire 1 e+ data_out [6] $end
$var wire 1 f+ data_out [5] $end
$var wire 1 g+ data_out [4] $end
$var wire 1 h+ data_out [3] $end
$var wire 1 i+ data_out [2] $end
$var wire 1 j+ data_out [1] $end
$var wire 1 k+ data_out [0] $end
$upscope $end
$upscope $end

$scope module inst_mem $end
$var parameter 32 `, DEPTH $end
$var parameter 32 a, BIT_SIZE $end
$var wire 1 9" clk $end
$var wire 1 ^" write_enable $end
$var wire 1 _" read_addr [7] $end
$var wire 1 `" read_addr [6] $end
$var wire 1 a" read_addr [5] $end
$var wire 1 b" read_addr [4] $end
$var wire 1 c" read_addr [3] $end
$var wire 1 d" read_addr [2] $end
$var wire 1 e" read_addr [1] $end
$var wire 1 f" read_addr [0] $end
$var wire 1 g" write_addr [7] $end
$var wire 1 h" write_addr [6] $end
$var wire 1 i" write_addr [5] $end
$var wire 1 j" write_addr [4] $end
$var wire 1 k" write_addr [3] $end
$var wire 1 l" write_addr [2] $end
$var wire 1 m" write_addr [1] $end
$var wire 1 n" write_addr [0] $end
$var wire 1 b, data_in [31] $end
$var wire 1 c, data_in [30] $end
$var wire 1 d, data_in [29] $end
$var wire 1 e, data_in [28] $end
$var wire 1 f, data_in [27] $end
$var wire 1 g, data_in [26] $end
$var wire 1 h, data_in [25] $end
$var wire 1 i, data_in [24] $end
$var wire 1 j, data_in [23] $end
$var wire 1 k, data_in [22] $end
$var wire 1 l, data_in [21] $end
$var wire 1 m, data_in [20] $end
$var wire 1 n, data_in [19] $end
$var wire 1 o, data_in [18] $end
$var wire 1 p, data_in [17] $end
$var wire 1 q, data_in [16] $end
$var wire 1 r, data_in [15] $end
$var wire 1 s, data_in [14] $end
$var wire 1 t, data_in [13] $end
$var wire 1 u, data_in [12] $end
$var wire 1 v, data_in [11] $end
$var wire 1 w, data_in [10] $end
$var wire 1 x, data_in [9] $end
$var wire 1 y, data_in [8] $end
$var wire 1 z, data_in [7] $end
$var wire 1 {, data_in [6] $end
$var wire 1 |, data_in [5] $end
$var wire 1 }, data_in [4] $end
$var wire 1 ~, data_in [3] $end
$var wire 1 !- data_in [2] $end
$var wire 1 "- data_in [1] $end
$var wire 1 #- data_in [0] $end
$var wire 1 o" data_out [31] $end
$var wire 1 p" data_out [30] $end
$var wire 1 q" data_out [29] $end
$var wire 1 r" data_out [28] $end
$var wire 1 s" data_out [27] $end
$var wire 1 t" data_out [26] $end
$var wire 1 u" data_out [25] $end
$var wire 1 v" data_out [24] $end
$var wire 1 w" data_out [23] $end
$var wire 1 x" data_out [22] $end
$var wire 1 y" data_out [21] $end
$var wire 1 z" data_out [20] $end
$var wire 1 {" data_out [19] $end
$var wire 1 |" data_out [18] $end
$var wire 1 }" data_out [17] $end
$var wire 1 ~" data_out [16] $end
$var wire 1 !# data_out [15] $end
$var wire 1 "# data_out [14] $end
$var wire 1 ## data_out [13] $end
$var wire 1 $# data_out [12] $end
$var wire 1 %# data_out [11] $end
$var wire 1 &# data_out [10] $end
$var wire 1 '# data_out [9] $end
$var wire 1 (# data_out [8] $end
$var wire 1 )# data_out [7] $end
$var wire 1 *# data_out [6] $end
$var wire 1 +# data_out [5] $end
$var wire 1 ,# data_out [4] $end
$var wire 1 -# data_out [3] $end
$var wire 1 .# data_out [2] $end
$var wire 1 /# data_out [1] $end
$var wire 1 0# data_out [0] $end
$upscope $end

$scope module controller $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var reg 32 $- inst_data [31:0] $end
$var reg 8 %- inst_addr [7:0] $end
$var wire 1 &- inst_write_addr [31] $end
$var wire 1 '- inst_write_addr [30] $end
$var wire 1 (- inst_write_addr [29] $end
$var wire 1 )- inst_write_addr [28] $end
$var wire 1 *- inst_write_addr [27] $end
$var wire 1 +- inst_write_addr [26] $end
$var wire 1 ,- inst_write_addr [25] $end
$var wire 1 -- inst_write_addr [24] $end
$var wire 1 .- inst_write_addr [23] $end
$var wire 1 /- inst_write_addr [22] $end
$var wire 1 0- inst_write_addr [21] $end
$var wire 1 1- inst_write_addr [20] $end
$var wire 1 2- inst_write_addr [19] $end
$var wire 1 3- inst_write_addr [18] $end
$var wire 1 4- inst_write_addr [17] $end
$var wire 1 5- inst_write_addr [16] $end
$var wire 1 6- inst_write_addr [15] $end
$var wire 1 7- inst_write_addr [14] $end
$var wire 1 8- inst_write_addr [13] $end
$var wire 1 9- inst_write_addr [12] $end
$var wire 1 :- inst_write_addr [11] $end
$var wire 1 ;- inst_write_addr [10] $end
$var wire 1 <- inst_write_addr [9] $end
$var wire 1 =- inst_write_addr [8] $end
$var wire 1 g" inst_write_addr [7] $end
$var wire 1 h" inst_write_addr [6] $end
$var wire 1 i" inst_write_addr [5] $end
$var wire 1 j" inst_write_addr [4] $end
$var wire 1 k" inst_write_addr [3] $end
$var wire 1 l" inst_write_addr [2] $end
$var wire 1 m" inst_write_addr [1] $end
$var wire 1 n" inst_write_addr [0] $end
$var wire 1 ^" inst_write_enable $end
$var reg 4 >- mac_reg_enable [3:0] $end
$var reg 1 ?- mac_acc_loopback $end
$var reg 1 @- mac_x_select $end
$var reg 1 A- mac_w_select $end
$var reg 1 B- mac_acc_update $end
$var reg 1 C- serializer_update $end
$var reg 1 D- act_input_select $end
$var reg 1 E- act_bypass $end
$var reg 2 F- act_mask [1:0] $end
$var reg 6 G- act_addr [5:0] $end
$var reg 1 H- act_write_enable $end
$var reg 1 I- xy_acc_loopback $end
$var reg 1 J- xy_acc_op $end
$var reg 5 K- xy_read_addr [4:0] $end
$var reg 5 L- xy_write_addr [4:0] $end
$var reg 1 M- xy_write_enable $end
$var reg 5 N- w_read_addr [4:0] $end
$var reg 5 O- w_write_addr [4:0] $end
$var reg 1 P- w_write_enable $end
$var reg 4 Q- instruction [3:0] $end
$var reg 4 R- prev_instruction [3:0] $end
$var reg 4 S- next_instruction [3:0] $end
$var wire 1 T- mac_addr [1] $end
$var wire 1 U- mac_addr [0] $end
$var reg 1 V- looped_instruction $end
$var reg 5 W- mov_counter [4:0] $end
$var reg 5 X- mov_length [4:0] $end
$var reg 5 Y- reg_mov_length [4:0] $end
$var reg 1 Z- mov_update $end
$upscope $end
$upscope $end
$var wire 1 % prod_full [0] $end
$var wire 1 & prod_full [1] $end
$var wire 1 ' prod_full [2] $end
$var wire 1 ( prod_full [3] $end
$var wire 1 ) prod_full [4] $end
$var wire 1 * prod_full [5] $end
$var wire 1 + prod_full [6] $end
$var wire 1 , prod_full [7] $end
$var wire 1 - prod_full [8] $end
$var wire 1 . prod_full [9] $end
$var wire 1 / prod_full [10] $end
$var wire 1 0 prod_full [11] $end
$var wire 1 1 prod_full [12] $end
$var wire 1 2 prod_full [13] $end
$var wire 1 3 prod_full [14] $end
$var wire 1 4 prod_full [15] $end
$var wire 1 5 prod_full [16] $end
$var wire 1 6 prod_full [17] $end
$var wire 1 7 prod_full [18] $end
$var wire 1 8 prod_full [19] $end
$var wire 1 9 prod_full [20] $end
$var wire 1 : prod_full [21] $end
$var wire 1 ; prod_full [22] $end
$var wire 1 < prod_full [23] $end
$var wire 1 = prod_full [24] $end
$var wire 1 > prod_full [25] $end
$var wire 1 ? prod_full [26] $end
$var wire 1 @ prod_full [27] $end
$var wire 1 A prod_full [28] $end
$var wire 1 B prod_full [29] $end
$var wire 1 C prod_full [30] $end
$var wire 1 D prod_full [31] $end
$var wire 1 E prod_full [32] $end
$var wire 1 F prod_full [33] $end
$var wire 1 G prod_full [34] $end
$var wire 1 H prod_full [35] $end
$var wire 1 I prod_full [36] $end
$var wire 1 J prod_full [37] $end
$var wire 1 K prod_full [38] $end
$var wire 1 L prod_full [39] $end
$var wire 1 M prod_full [40] $end
$var wire 1 N prod_full [41] $end
$var wire 1 O prod_full [42] $end
$var wire 1 P prod_full [43] $end
$var wire 1 Q prod_full [44] $end
$var wire 1 R prod_full [45] $end
$var wire 1 S prod_full [46] $end
$var wire 1 T prod_full [47] $end
$var wire 1 U prod_full [48] $end
$var wire 1 V prod_full [49] $end
$var wire 1 W prod_full [50] $end
$var wire 1 X prod_full [51] $end
$var wire 1 Y prod_full [52] $end
$var wire 1 Z prod_full [53] $end
$var wire 1 [ prod_full [54] $end
$var wire 1 \ prod_full [55] $end
$var wire 1 ] prod_full [56] $end
$var wire 1 ^ prod_full [57] $end
$var wire 1 _ prod_full [58] $end
$var wire 1 ` prod_full [59] $end
$var wire 1 a prod_full [60] $end
$var wire 1 b prod_full [61] $end
$var wire 1 c prod_full [62] $end
$var wire 1 d prod_full [63] $end
$var wire 1 e prod_full [64] $end
$var wire 1 f prod_full [65] $end
$var wire 1 g prod_full [66] $end
$var wire 1 h prod_full [67] $end
$var wire 1 i prod_full [68] $end
$var wire 1 j prod_full [69] $end
$var wire 1 k prod_full [70] $end
$var wire 1 l prod_full [71] $end
$var wire 1 m prod_full [72] $end
$var wire 1 n prod_full [73] $end
$var wire 1 o prod_full [74] $end
$var wire 1 p prod_full [75] $end
$var wire 1 q prod_full [76] $end
$var wire 1 r prod_full [77] $end
$var wire 1 s prod_full [78] $end
$var wire 1 t prod_full [79] $end
$var wire 1 u prod_full [80] $end
$var wire 1 v prod_full [81] $end
$var wire 1 w prod_full [82] $end
$var wire 1 x prod_full [83] $end
$var wire 1 y prod_full [84] $end
$var wire 1 z prod_full [85] $end
$var wire 1 { prod_full [86] $end
$var wire 1 | prod_full [87] $end
$var wire 1 } prod_full [88] $end
$var wire 1 ~ prod_full [89] $end
$var wire 1 !! prod_full [90] $end
$var wire 1 "! prod_full [91] $end
$var wire 1 #! prod_full [92] $end
$var wire 1 $! prod_full [93] $end
$var wire 1 %! prod_full [94] $end
$var wire 1 &! prod_full [95] $end
$var wire 1 '! prod_full [96] $end
$var wire 1 (! prod_full [97] $end
$var wire 1 )! prod_full [98] $end
$var wire 1 *! prod_full [99] $end
$var wire 1 +! prod_full [100] $end
$var wire 1 ,! prod_full [101] $end
$var wire 1 -! prod_full [102] $end
$var wire 1 .! prod_full [103] $end
$var wire 1 /! prod_full [104] $end
$var wire 1 0! prod_full [105] $end
$var wire 1 1! prod_full [106] $end
$var wire 1 2! prod_full [107] $end
$var wire 1 3! prod_full [108] $end
$var wire 1 4! prod_full [109] $end
$var wire 1 5! prod_full [110] $end
$var wire 1 6! prod_full [111] $end
$var wire 1 7! prod_full [112] $end
$var wire 1 8! prod_full [113] $end
$var wire 1 9! prod_full [114] $end
$var wire 1 :! prod_full [115] $end
$var wire 1 ;! prod_full [116] $end
$var wire 1 <! prod_full [117] $end
$var wire 1 =! prod_full [118] $end
$var wire 1 >! prod_full [119] $end
$var wire 1 ?! prod_full [120] $end
$var wire 1 @! prod_full [121] $end
$var wire 1 A! prod_full [122] $end
$var wire 1 B! prod_full [123] $end
$var wire 1 C! prod_full [124] $end
$var wire 1 D! prod_full [125] $end
$var wire 1 E! prod_full [126] $end
$var wire 1 F! prod_full [127] $end
$var wire 1 G! mac_reg [0] $end
$var wire 1 H! mac_reg [1] $end
$var wire 1 I! mac_reg [2] $end
$var wire 1 J! mac_reg [3] $end
$var wire 1 K! mac_reg [4] $end
$var wire 1 L! mac_reg [5] $end
$var wire 1 M! mac_reg [6] $end
$var wire 1 N! mac_reg [7] $end
$var wire 1 O! mac_reg [8] $end
$var wire 1 P! mac_reg [9] $end
$var wire 1 Q! mac_reg [10] $end
$var wire 1 R! mac_reg [11] $end
$var wire 1 S! mac_reg [12] $end
$var wire 1 T! mac_reg [13] $end
$var wire 1 U! mac_reg [14] $end
$var wire 1 V! mac_reg [15] $end
$var wire 1 W! mac_reg [16] $end
$var wire 1 X! mac_reg [17] $end
$var wire 1 Y! mac_reg [18] $end
$var wire 1 Z! mac_reg [19] $end
$var wire 1 [! mac_reg [20] $end
$var wire 1 \! mac_reg [21] $end
$var wire 1 ]! mac_reg [22] $end
$var wire 1 ^! mac_reg [23] $end
$var wire 1 _! mac_reg [24] $end
$var wire 1 `! mac_reg [25] $end
$var wire 1 a! mac_reg [26] $end
$var wire 1 b! mac_reg [27] $end
$var wire 1 c! mac_reg [28] $end
$var wire 1 d! mac_reg [29] $end
$var wire 1 e! mac_reg [30] $end
$var wire 1 f! mac_reg [31] $end
$var wire 1 g! mac_reg [32] $end
$var wire 1 h! mac_reg [33] $end
$var wire 1 i! mac_reg [34] $end
$var wire 1 j! mac_reg [35] $end
$var wire 1 k! mac_reg [36] $end
$var wire 1 l! mac_reg [37] $end
$var wire 1 m! mac_reg [38] $end
$var wire 1 n! mac_reg [39] $end
$var wire 1 o! mac_reg [40] $end
$var wire 1 p! mac_reg [41] $end
$var wire 1 q! mac_reg [42] $end
$var wire 1 r! mac_reg [43] $end
$var wire 1 s! mac_reg [44] $end
$var wire 1 t! mac_reg [45] $end
$var wire 1 u! mac_reg [46] $end
$var wire 1 v! mac_reg [47] $end
$var wire 1 w! mac_reg [48] $end
$var wire 1 x! mac_reg [49] $end
$var wire 1 y! mac_reg [50] $end
$var wire 1 z! mac_reg [51] $end
$var wire 1 {! mac_reg [52] $end
$var wire 1 |! mac_reg [53] $end
$var wire 1 }! mac_reg [54] $end
$var wire 1 ~! mac_reg [55] $end
$var wire 1 !" mac_reg [56] $end
$var wire 1 "" mac_reg [57] $end
$var wire 1 #" mac_reg [58] $end
$var wire 1 $" mac_reg [59] $end
$var wire 1 %" mac_reg [60] $end
$var wire 1 &" mac_reg [61] $end
$var wire 1 '" mac_reg [62] $end
$var wire 1 (" mac_reg [63] $end
$var wire 1 )" sum_pos_overflow [3] $end
$var wire 1 *" sum_pos_overflow [2] $end
$var wire 1 +" sum_pos_overflow [1] $end
$var wire 1 ," sum_pos_overflow [0] $end
$var wire 1 -" sum_neg_overflow [3] $end
$var wire 1 ." sum_neg_overflow [2] $end
$var wire 1 /" sum_neg_overflow [1] $end
$var wire 1 0" sum_neg_overflow [0] $end
$var wire 1 1" prod_pos_overflow [3] $end
$var wire 1 2" prod_pos_overflow [2] $end
$var wire 1 3" prod_pos_overflow [1] $end
$var wire 1 4" prod_pos_overflow [0] $end
$var wire 1 5" prod_neg_overflow [3] $end
$var wire 1 6" prod_neg_overflow [2] $end
$var wire 1 7" prod_neg_overflow [1] $end
$var wire 1 8" prod_neg_overflow [0] $end

$scope module nn $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 ;" mac_reg_enable [3] $end
$var wire 1 <" mac_reg_enable [2] $end
$var wire 1 =" mac_reg_enable [1] $end
$var wire 1 >" mac_reg_enable [0] $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 C" serializer_update $end
$var wire 1 D" act_input_select $end
$var wire 1 E" act_bypass $end
$var wire 1 F" xy_read_addr [4] $end
$var wire 1 G" xy_read_addr [3] $end
$var wire 1 H" xy_read_addr [2] $end
$var wire 1 I" xy_read_addr [1] $end
$var wire 1 J" xy_read_addr [0] $end
$var wire 1 K" xy_write_addr [4] $end
$var wire 1 L" xy_write_addr [3] $end
$var wire 1 M" xy_write_addr [2] $end
$var wire 1 N" xy_write_addr [1] $end
$var wire 1 O" xy_write_addr [0] $end
$var wire 1 P" xy_write_enable $end
$var wire 1 Q" xy_acc_loopback $end
$var wire 1 R" xy_acc_op $end
$var wire 1 S" w_read_addr [4] $end
$var wire 1 T" w_read_addr [3] $end
$var wire 1 U" w_read_addr [2] $end
$var wire 1 V" w_read_addr [1] $end
$var wire 1 W" w_read_addr [0] $end
$var wire 1 X" w_write_addr [4] $end
$var wire 1 Y" w_write_addr [3] $end
$var wire 1 Z" w_write_addr [2] $end
$var wire 1 [" w_write_addr [1] $end
$var wire 1 \" w_write_addr [0] $end
$var wire 1 ]" w_write_enable $end
$var wire 1 ^" inst_write_enable $end
$var wire 1 _" inst_read_addr [7] $end
$var wire 1 `" inst_read_addr [6] $end
$var wire 1 a" inst_read_addr [5] $end
$var wire 1 b" inst_read_addr [4] $end
$var wire 1 c" inst_read_addr [3] $end
$var wire 1 d" inst_read_addr [2] $end
$var wire 1 e" inst_read_addr [1] $end
$var wire 1 f" inst_read_addr [0] $end
$var wire 1 g" inst_write_addr [7] $end
$var wire 1 h" inst_write_addr [6] $end
$var wire 1 i" inst_write_addr [5] $end
$var wire 1 j" inst_write_addr [4] $end
$var wire 1 k" inst_write_addr [3] $end
$var wire 1 l" inst_write_addr [2] $end
$var wire 1 m" inst_write_addr [1] $end
$var wire 1 n" inst_write_addr [0] $end
$var wire 1 o" inst_data [31] $end
$var wire 1 p" inst_data [30] $end
$var wire 1 q" inst_data [29] $end
$var wire 1 r" inst_data [28] $end
$var wire 1 s" inst_data [27] $end
$var wire 1 t" inst_data [26] $end
$var wire 1 u" inst_data [25] $end
$var wire 1 v" inst_data [24] $end
$var wire 1 w" inst_data [23] $end
$var wire 1 x" inst_data [22] $end
$var wire 1 y" inst_data [21] $end
$var wire 1 z" inst_data [20] $end
$var wire 1 {" inst_data [19] $end
$var wire 1 |" inst_data [18] $end
$var wire 1 }" inst_data [17] $end
$var wire 1 ~" inst_data [16] $end
$var wire 1 !# inst_data [15] $end
$var wire 1 "# inst_data [14] $end
$var wire 1 ## inst_data [13] $end
$var wire 1 $# inst_data [12] $end
$var wire 1 %# inst_data [11] $end
$var wire 1 &# inst_data [10] $end
$var wire 1 '# inst_data [9] $end
$var wire 1 (# inst_data [8] $end
$var wire 1 )# inst_data [7] $end
$var wire 1 *# inst_data [6] $end
$var wire 1 +# inst_data [5] $end
$var wire 1 ,# inst_data [4] $end
$var wire 1 -# inst_data [3] $end
$var wire 1 .# inst_data [2] $end
$var wire 1 /# inst_data [1] $end
$var wire 1 0# inst_data [0] $end
$var wire 1 1# x [15] $end
$var wire 1 2# x [14] $end
$var wire 1 3# x [13] $end
$var wire 1 4# x [12] $end
$var wire 1 5# x [11] $end
$var wire 1 6# x [10] $end
$var wire 1 7# x [9] $end
$var wire 1 8# x [8] $end
$var wire 1 9# x [7] $end
$var wire 1 :# x [6] $end
$var wire 1 ;# x [5] $end
$var wire 1 <# x [4] $end
$var wire 1 =# x [3] $end
$var wire 1 ># x [2] $end
$var wire 1 ?# x [1] $end
$var wire 1 @# x [0] $end
$var wire 1 A# w [0] $end
$var wire 1 B# w [1] $end
$var wire 1 C# w [2] $end
$var wire 1 D# w [3] $end
$var wire 1 E# w [4] $end
$var wire 1 F# w [5] $end
$var wire 1 G# w [6] $end
$var wire 1 H# w [7] $end
$var wire 1 I# w [8] $end
$var wire 1 J# w [9] $end
$var wire 1 K# w [10] $end
$var wire 1 L# w [11] $end
$var wire 1 M# w [12] $end
$var wire 1 N# w [13] $end
$var wire 1 O# w [14] $end
$var wire 1 P# w [15] $end
$var wire 1 Q# w [16] $end
$var wire 1 R# w [17] $end
$var wire 1 S# w [18] $end
$var wire 1 T# w [19] $end
$var wire 1 U# w [20] $end
$var wire 1 V# w [21] $end
$var wire 1 W# w [22] $end
$var wire 1 X# w [23] $end
$var wire 1 Y# w [24] $end
$var wire 1 Z# w [25] $end
$var wire 1 [# w [26] $end
$var wire 1 \# w [27] $end
$var wire 1 ]# w [28] $end
$var wire 1 ^# w [29] $end
$var wire 1 _# w [30] $end
$var wire 1 `# w [31] $end
$var wire 1 a# w [32] $end
$var wire 1 b# w [33] $end
$var wire 1 c# w [34] $end
$var wire 1 d# w [35] $end
$var wire 1 e# w [36] $end
$var wire 1 f# w [37] $end
$var wire 1 g# w [38] $end
$var wire 1 h# w [39] $end
$var wire 1 i# w [40] $end
$var wire 1 j# w [41] $end
$var wire 1 k# w [42] $end
$var wire 1 l# w [43] $end
$var wire 1 m# w [44] $end
$var wire 1 n# w [45] $end
$var wire 1 o# w [46] $end
$var wire 1 p# w [47] $end
$var wire 1 q# w [48] $end
$var wire 1 r# w [49] $end
$var wire 1 s# w [50] $end
$var wire 1 t# w [51] $end
$var wire 1 u# w [52] $end
$var wire 1 v# w [53] $end
$var wire 1 w# w [54] $end
$var wire 1 x# w [55] $end
$var wire 1 y# w [56] $end
$var wire 1 z# w [57] $end
$var wire 1 {# w [58] $end
$var wire 1 |# w [59] $end
$var wire 1 }# w [60] $end
$var wire 1 ~# w [61] $end
$var wire 1 !$ w [62] $end
$var wire 1 "$ w [63] $end
$var wire 1 #$ acc [0] $end
$var wire 1 $$ acc [1] $end
$var wire 1 %$ acc [2] $end
$var wire 1 &$ acc [3] $end
$var wire 1 '$ acc [4] $end
$var wire 1 ($ acc [5] $end
$var wire 1 )$ acc [6] $end
$var wire 1 *$ acc [7] $end
$var wire 1 +$ acc [8] $end
$var wire 1 ,$ acc [9] $end
$var wire 1 -$ acc [10] $end
$var wire 1 .$ acc [11] $end
$var wire 1 /$ acc [12] $end
$var wire 1 0$ acc [13] $end
$var wire 1 1$ acc [14] $end
$var wire 1 2$ acc [15] $end
$var wire 1 3$ acc [16] $end
$var wire 1 4$ acc [17] $end
$var wire 1 5$ acc [18] $end
$var wire 1 6$ acc [19] $end
$var wire 1 7$ acc [20] $end
$var wire 1 8$ acc [21] $end
$var wire 1 9$ acc [22] $end
$var wire 1 :$ acc [23] $end
$var wire 1 ;$ acc [24] $end
$var wire 1 <$ acc [25] $end
$var wire 1 =$ acc [26] $end
$var wire 1 >$ acc [27] $end
$var wire 1 ?$ acc [28] $end
$var wire 1 @$ acc [29] $end
$var wire 1 A$ acc [30] $end
$var wire 1 B$ acc [31] $end
$var wire 1 C$ acc [32] $end
$var wire 1 D$ acc [33] $end
$var wire 1 E$ acc [34] $end
$var wire 1 F$ acc [35] $end
$var wire 1 G$ acc [36] $end
$var wire 1 H$ acc [37] $end
$var wire 1 I$ acc [38] $end
$var wire 1 J$ acc [39] $end
$var wire 1 K$ acc [40] $end
$var wire 1 L$ acc [41] $end
$var wire 1 M$ acc [42] $end
$var wire 1 N$ acc [43] $end
$var wire 1 O$ acc [44] $end
$var wire 1 P$ acc [45] $end
$var wire 1 Q$ acc [46] $end
$var wire 1 R$ acc [47] $end
$var wire 1 S$ acc [48] $end
$var wire 1 T$ acc [49] $end
$var wire 1 U$ acc [50] $end
$var wire 1 V$ acc [51] $end
$var wire 1 W$ acc [52] $end
$var wire 1 X$ acc [53] $end
$var wire 1 Y$ acc [54] $end
$var wire 1 Z$ acc [55] $end
$var wire 1 [$ acc [56] $end
$var wire 1 \$ acc [57] $end
$var wire 1 ]$ acc [58] $end
$var wire 1 ^$ acc [59] $end
$var wire 1 _$ acc [60] $end
$var wire 1 `$ acc [61] $end
$var wire 1 a$ acc [62] $end
$var wire 1 b$ acc [63] $end
$var wire 1 c$ mac [0] $end
$var wire 1 d$ mac [1] $end
$var wire 1 e$ mac [2] $end
$var wire 1 f$ mac [3] $end
$var wire 1 g$ mac [4] $end
$var wire 1 h$ mac [5] $end
$var wire 1 i$ mac [6] $end
$var wire 1 j$ mac [7] $end
$var wire 1 k$ mac [8] $end
$var wire 1 l$ mac [9] $end
$var wire 1 m$ mac [10] $end
$var wire 1 n$ mac [11] $end
$var wire 1 o$ mac [12] $end
$var wire 1 p$ mac [13] $end
$var wire 1 q$ mac [14] $end
$var wire 1 r$ mac [15] $end
$var wire 1 s$ mac [16] $end
$var wire 1 t$ mac [17] $end
$var wire 1 u$ mac [18] $end
$var wire 1 v$ mac [19] $end
$var wire 1 w$ mac [20] $end
$var wire 1 x$ mac [21] $end
$var wire 1 y$ mac [22] $end
$var wire 1 z$ mac [23] $end
$var wire 1 {$ mac [24] $end
$var wire 1 |$ mac [25] $end
$var wire 1 }$ mac [26] $end
$var wire 1 ~$ mac [27] $end
$var wire 1 !% mac [28] $end
$var wire 1 "% mac [29] $end
$var wire 1 #% mac [30] $end
$var wire 1 $% mac [31] $end
$var wire 1 %% mac [32] $end
$var wire 1 &% mac [33] $end
$var wire 1 '% mac [34] $end
$var wire 1 (% mac [35] $end
$var wire 1 )% mac [36] $end
$var wire 1 *% mac [37] $end
$var wire 1 +% mac [38] $end
$var wire 1 ,% mac [39] $end
$var wire 1 -% mac [40] $end
$var wire 1 .% mac [41] $end
$var wire 1 /% mac [42] $end
$var wire 1 0% mac [43] $end
$var wire 1 1% mac [44] $end
$var wire 1 2% mac [45] $end
$var wire 1 3% mac [46] $end
$var wire 1 4% mac [47] $end
$var wire 1 5% mac [48] $end
$var wire 1 6% mac [49] $end
$var wire 1 7% mac [50] $end
$var wire 1 8% mac [51] $end
$var wire 1 9% mac [52] $end
$var wire 1 :% mac [53] $end
$var wire 1 ;% mac [54] $end
$var wire 1 <% mac [55] $end
$var wire 1 =% mac [56] $end
$var wire 1 >% mac [57] $end
$var wire 1 ?% mac [58] $end
$var wire 1 @% mac [59] $end
$var wire 1 A% mac [60] $end
$var wire 1 B% mac [61] $end
$var wire 1 C% mac [62] $end
$var wire 1 D% mac [63] $end
$var wire 1 E% prod [0] $end
$var wire 1 F% prod [1] $end
$var wire 1 G% prod [2] $end
$var wire 1 H% prod [3] $end
$var wire 1 I% prod [4] $end
$var wire 1 J% prod [5] $end
$var wire 1 K% prod [6] $end
$var wire 1 L% prod [7] $end
$var wire 1 M% prod [8] $end
$var wire 1 N% prod [9] $end
$var wire 1 O% prod [10] $end
$var wire 1 P% prod [11] $end
$var wire 1 Q% prod [12] $end
$var wire 1 R% prod [13] $end
$var wire 1 S% prod [14] $end
$var wire 1 T% prod [15] $end
$var wire 1 U% prod [16] $end
$var wire 1 V% prod [17] $end
$var wire 1 W% prod [18] $end
$var wire 1 X% prod [19] $end
$var wire 1 Y% prod [20] $end
$var wire 1 Z% prod [21] $end
$var wire 1 [% prod [22] $end
$var wire 1 \% prod [23] $end
$var wire 1 ]% prod [24] $end
$var wire 1 ^% prod [25] $end
$var wire 1 _% prod [26] $end
$var wire 1 `% prod [27] $end
$var wire 1 a% prod [28] $end
$var wire 1 b% prod [29] $end
$var wire 1 c% prod [30] $end
$var wire 1 d% prod [31] $end
$var wire 1 e% prod [32] $end
$var wire 1 f% prod [33] $end
$var wire 1 g% prod [34] $end
$var wire 1 h% prod [35] $end
$var wire 1 i% prod [36] $end
$var wire 1 j% prod [37] $end
$var wire 1 k% prod [38] $end
$var wire 1 l% prod [39] $end
$var wire 1 m% prod [40] $end
$var wire 1 n% prod [41] $end
$var wire 1 o% prod [42] $end
$var wire 1 p% prod [43] $end
$var wire 1 q% prod [44] $end
$var wire 1 r% prod [45] $end
$var wire 1 s% prod [46] $end
$var wire 1 t% prod [47] $end
$var wire 1 u% prod [48] $end
$var wire 1 v% prod [49] $end
$var wire 1 w% prod [50] $end
$var wire 1 x% prod [51] $end
$var wire 1 y% prod [52] $end
$var wire 1 z% prod [53] $end
$var wire 1 {% prod [54] $end
$var wire 1 |% prod [55] $end
$var wire 1 }% prod [56] $end
$var wire 1 ~% prod [57] $end
$var wire 1 !& prod [58] $end
$var wire 1 "& prod [59] $end
$var wire 1 #& prod [60] $end
$var wire 1 $& prod [61] $end
$var wire 1 %& prod [62] $end
$var wire 1 && prod [63] $end
$var wire 1 '& adder_out [3] $end
$var wire 1 (& adder_out [2] $end
$var wire 1 )& adder_out [1] $end
$var wire 1 *& adder_out [0] $end
$var wire 1 +& adder_out [-1] $end
$var wire 1 ,& adder_out [-2] $end
$var wire 1 -& adder_out [-3] $end
$var wire 1 .& adder_out [-4] $end
$var wire 1 /& adder_out [-5] $end
$var wire 1 0& adder_out [-6] $end
$var wire 1 1& adder_out [-7] $end
$var wire 1 2& adder_out [-8] $end
$var wire 1 3& adder_out [-9] $end
$var wire 1 4& adder_out [-10] $end
$var wire 1 5& adder_out [-11] $end
$var wire 1 6& adder_out [-12] $end
$var wire 1 7& serializer_out [3] $end
$var wire 1 8& serializer_out [2] $end
$var wire 1 9& serializer_out [1] $end
$var wire 1 :& serializer_out [0] $end
$var wire 1 ;& serializer_out [-1] $end
$var wire 1 <& serializer_out [-2] $end
$var wire 1 =& serializer_out [-3] $end
$var wire 1 >& serializer_out [-4] $end
$var wire 1 ?& serializer_out [-5] $end
$var wire 1 @& serializer_out [-6] $end
$var wire 1 A& serializer_out [-7] $end
$var wire 1 B& serializer_out [-8] $end
$var wire 1 C& serializer_out [-9] $end
$var wire 1 D& serializer_out [-10] $end
$var wire 1 E& serializer_out [-11] $end
$var wire 1 F& serializer_out [-12] $end
$var wire 1 G& act_input [3] $end
$var wire 1 H& act_input [2] $end
$var wire 1 I& act_input [1] $end
$var wire 1 J& act_input [0] $end
$var wire 1 K& act_input [-1] $end
$var wire 1 L& act_input [-2] $end
$var wire 1 M& act_input [-3] $end
$var wire 1 N& act_input [-4] $end
$var wire 1 O& act_input [-5] $end
$var wire 1 P& act_input [-6] $end
$var wire 1 Q& act_input [-7] $end
$var wire 1 R& act_input [-8] $end
$var wire 1 S& act_input [-9] $end
$var wire 1 T& act_input [-10] $end
$var wire 1 U& act_input [-11] $end
$var wire 1 V& act_input [-12] $end
$var wire 1 W& act_ouput [3] $end
$var wire 1 X& act_ouput [2] $end
$var wire 1 Y& act_ouput [1] $end
$var wire 1 Z& act_ouput [0] $end
$var wire 1 [& act_ouput [-1] $end
$var wire 1 \& act_ouput [-2] $end
$var wire 1 ]& act_ouput [-3] $end
$var wire 1 ^& act_ouput [-4] $end
$var wire 1 _& act_ouput [-5] $end
$var wire 1 `& act_ouput [-6] $end
$var wire 1 a& act_ouput [-7] $end
$var wire 1 b& act_ouput [-8] $end
$var wire 1 c& act_ouput [-9] $end
$var wire 1 d& act_ouput [-10] $end
$var wire 1 e& act_ouput [-11] $end
$var wire 1 f& act_ouput [-12] $end
$var wire 1 g& act_mask [1] $end
$var wire 1 h& act_mask [0] $end
$var wire 1 i& xy_writeback [3] $end
$var wire 1 j& xy_writeback [2] $end
$var wire 1 k& xy_writeback [1] $end
$var wire 1 l& xy_writeback [0] $end
$var wire 1 m& xy_writeback [-1] $end
$var wire 1 n& xy_writeback [-2] $end
$var wire 1 o& xy_writeback [-3] $end
$var wire 1 p& xy_writeback [-4] $end
$var wire 1 q& xy_writeback [-5] $end
$var wire 1 r& xy_writeback [-6] $end
$var wire 1 s& xy_writeback [-7] $end
$var wire 1 t& xy_writeback [-8] $end
$var wire 1 u& xy_writeback [-9] $end
$var wire 1 v& xy_writeback [-10] $end
$var wire 1 w& xy_writeback [-11] $end
$var wire 1 x& xy_writeback [-12] $end
$var wire 1 y& xy_acc [3] $end
$var wire 1 z& xy_acc [2] $end
$var wire 1 {& xy_acc [1] $end
$var wire 1 |& xy_acc [0] $end
$var wire 1 }& xy_acc [-1] $end
$var wire 1 ~& xy_acc [-2] $end
$var wire 1 !' xy_acc [-3] $end
$var wire 1 "' xy_acc [-4] $end
$var wire 1 #' xy_acc [-5] $end
$var wire 1 $' xy_acc [-6] $end
$var wire 1 %' xy_acc [-7] $end
$var wire 1 &' xy_acc [-8] $end
$var wire 1 '' xy_acc [-9] $end
$var wire 1 (' xy_acc [-10] $end
$var wire 1 )' xy_acc [-11] $end
$var wire 1 *' xy_acc [-12] $end
$var wire 1 +' act_addr [5] $end
$var wire 1 ,' act_addr [4] $end
$var wire 1 -' act_addr [3] $end
$var wire 1 .' act_addr [2] $end
$var wire 1 /' act_addr [1] $end
$var wire 1 0' act_addr [0] $end
$var wire 1 1' act_write_data [31] $end
$var wire 1 2' act_write_data [30] $end
$var wire 1 3' act_write_data [29] $end
$var wire 1 4' act_write_data [28] $end
$var wire 1 5' act_write_data [27] $end
$var wire 1 6' act_write_data [26] $end
$var wire 1 7' act_write_data [25] $end
$var wire 1 8' act_write_data [24] $end
$var wire 1 9' act_write_data [23] $end
$var wire 1 :' act_write_data [22] $end
$var wire 1 ;' act_write_data [21] $end
$var wire 1 <' act_write_data [20] $end
$var wire 1 =' act_write_data [19] $end
$var wire 1 >' act_write_data [18] $end
$var wire 1 ?' act_write_data [17] $end
$var wire 1 @' act_write_data [16] $end
$var wire 1 A' act_write_data [15] $end
$var wire 1 B' act_write_data [14] $end
$var wire 1 C' act_write_data [13] $end
$var wire 1 D' act_write_data [12] $end
$var wire 1 E' act_write_data [11] $end
$var wire 1 F' act_write_data [10] $end
$var wire 1 G' act_write_data [9] $end
$var wire 1 H' act_write_data [8] $end
$var wire 1 I' act_write_data [7] $end
$var wire 1 J' act_write_data [6] $end
$var wire 1 K' act_write_data [5] $end
$var wire 1 L' act_write_data [4] $end
$var wire 1 M' act_write_data [3] $end
$var wire 1 N' act_write_data [2] $end
$var wire 1 O' act_write_data [1] $end
$var wire 1 P' act_write_data [0] $end
$var wire 1 Q' act_write_enable $end

$scope begin mac_gen[3] $end

$scope module w_mem $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 D% data_in [15] $end
$var wire 1 C% data_in [14] $end
$var wire 1 B% data_in [13] $end
$var wire 1 A% data_in [12] $end
$var wire 1 @% data_in [11] $end
$var wire 1 ?% data_in [10] $end
$var wire 1 >% data_in [9] $end
$var wire 1 =% data_in [8] $end
$var wire 1 <% data_in [7] $end
$var wire 1 ;% data_in [6] $end
$var wire 1 :% data_in [5] $end
$var wire 1 9% data_in [4] $end
$var wire 1 8% data_in [3] $end
$var wire 1 7% data_in [2] $end
$var wire 1 6% data_in [1] $end
$var wire 1 5% data_in [0] $end
$var wire 1 "$ data_out [15] $end
$var wire 1 !$ data_out [14] $end
$var wire 1 ~# data_out [13] $end
$var wire 1 }# data_out [12] $end
$var wire 1 |# data_out [11] $end
$var wire 1 {# data_out [10] $end
$var wire 1 z# data_out [9] $end
$var wire 1 y# data_out [8] $end
$var wire 1 x# data_out [7] $end
$var wire 1 w# data_out [6] $end
$var wire 1 v# data_out [5] $end
$var wire 1 u# data_out [4] $end
$var wire 1 t# data_out [3] $end
$var wire 1 s# data_out [2] $end
$var wire 1 r# data_out [1] $end
$var wire 1 q# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 ;" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 "$ w [3] $end
$var wire 1 !$ w [2] $end
$var wire 1 ~# w [1] $end
$var wire 1 }# w [0] $end
$var wire 1 |# w [-1] $end
$var wire 1 {# w [-2] $end
$var wire 1 z# w [-3] $end
$var wire 1 y# w [-4] $end
$var wire 1 x# w [-5] $end
$var wire 1 w# w [-6] $end
$var wire 1 v# w [-7] $end
$var wire 1 u# w [-8] $end
$var wire 1 t# w [-9] $end
$var wire 1 s# w [-10] $end
$var wire 1 r# w [-11] $end
$var wire 1 q# w [-12] $end
$var wire 1 [' prod_full [7] $end
$var wire 1 \' prod_full [6] $end
$var wire 1 ]' prod_full [5] $end
$var wire 1 ^' prod_full [4] $end
$var wire 1 _' prod_full [3] $end
$var wire 1 `' prod_full [2] $end
$var wire 1 a' prod_full [1] $end
$var wire 1 b' prod_full [0] $end
$var wire 1 c' prod_full [-1] $end
$var wire 1 d' prod_full [-2] $end
$var wire 1 e' prod_full [-3] $end
$var wire 1 f' prod_full [-4] $end
$var wire 1 g' prod_full [-5] $end
$var wire 1 h' prod_full [-6] $end
$var wire 1 i' prod_full [-7] $end
$var wire 1 j' prod_full [-8] $end
$var wire 1 k' prod_full [-9] $end
$var wire 1 l' prod_full [-10] $end
$var wire 1 m' prod_full [-11] $end
$var wire 1 n' prod_full [-12] $end
$var wire 1 o' prod_full [-13] $end
$var wire 1 p' prod_full [-14] $end
$var wire 1 q' prod_full [-15] $end
$var wire 1 r' prod_full [-16] $end
$var wire 1 s' prod_full [-17] $end
$var wire 1 t' prod_full [-18] $end
$var wire 1 u' prod_full [-19] $end
$var wire 1 v' prod_full [-20] $end
$var wire 1 w' prod_full [-21] $end
$var wire 1 x' prod_full [-22] $end
$var wire 1 y' prod_full [-23] $end
$var wire 1 z' prod_full [-24] $end
$var wire 1 {' loopback_sum [3] $end
$var wire 1 |' loopback_sum [2] $end
$var wire 1 }' loopback_sum [1] $end
$var wire 1 ~' loopback_sum [0] $end
$var wire 1 !( loopback_sum [-1] $end
$var wire 1 "( loopback_sum [-2] $end
$var wire 1 #( loopback_sum [-3] $end
$var wire 1 $( loopback_sum [-4] $end
$var wire 1 %( loopback_sum [-5] $end
$var wire 1 &( loopback_sum [-6] $end
$var wire 1 '( loopback_sum [-7] $end
$var wire 1 (( loopback_sum [-8] $end
$var wire 1 )( loopback_sum [-9] $end
$var wire 1 *( loopback_sum [-10] $end
$var wire 1 +( loopback_sum [-11] $end
$var wire 1 ,( loopback_sum [-12] $end
$var wire 1 -( sum_pos_overflow $end
$var wire 1 .( sum_neg_overflow $end
$var wire 1 /( prod_pos_overflow $end
$var wire 1 0( prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[2] $end

$scope module w_mem $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 4% data_in [15] $end
$var wire 1 3% data_in [14] $end
$var wire 1 2% data_in [13] $end
$var wire 1 1% data_in [12] $end
$var wire 1 0% data_in [11] $end
$var wire 1 /% data_in [10] $end
$var wire 1 .% data_in [9] $end
$var wire 1 -% data_in [8] $end
$var wire 1 ,% data_in [7] $end
$var wire 1 +% data_in [6] $end
$var wire 1 *% data_in [5] $end
$var wire 1 )% data_in [4] $end
$var wire 1 (% data_in [3] $end
$var wire 1 '% data_in [2] $end
$var wire 1 &% data_in [1] $end
$var wire 1 %% data_in [0] $end
$var wire 1 p# data_out [15] $end
$var wire 1 o# data_out [14] $end
$var wire 1 n# data_out [13] $end
$var wire 1 m# data_out [12] $end
$var wire 1 l# data_out [11] $end
$var wire 1 k# data_out [10] $end
$var wire 1 j# data_out [9] $end
$var wire 1 i# data_out [8] $end
$var wire 1 h# data_out [7] $end
$var wire 1 g# data_out [6] $end
$var wire 1 f# data_out [5] $end
$var wire 1 e# data_out [4] $end
$var wire 1 d# data_out [3] $end
$var wire 1 c# data_out [2] $end
$var wire 1 b# data_out [1] $end
$var wire 1 a# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 <" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 p# w [3] $end
$var wire 1 o# w [2] $end
$var wire 1 n# w [1] $end
$var wire 1 m# w [0] $end
$var wire 1 l# w [-1] $end
$var wire 1 k# w [-2] $end
$var wire 1 j# w [-3] $end
$var wire 1 i# w [-4] $end
$var wire 1 h# w [-5] $end
$var wire 1 g# w [-6] $end
$var wire 1 f# w [-7] $end
$var wire 1 e# w [-8] $end
$var wire 1 d# w [-9] $end
$var wire 1 c# w [-10] $end
$var wire 1 b# w [-11] $end
$var wire 1 a# w [-12] $end
$var wire 1 :( prod_full [7] $end
$var wire 1 ;( prod_full [6] $end
$var wire 1 <( prod_full [5] $end
$var wire 1 =( prod_full [4] $end
$var wire 1 >( prod_full [3] $end
$var wire 1 ?( prod_full [2] $end
$var wire 1 @( prod_full [1] $end
$var wire 1 A( prod_full [0] $end
$var wire 1 B( prod_full [-1] $end
$var wire 1 C( prod_full [-2] $end
$var wire 1 D( prod_full [-3] $end
$var wire 1 E( prod_full [-4] $end
$var wire 1 F( prod_full [-5] $end
$var wire 1 G( prod_full [-6] $end
$var wire 1 H( prod_full [-7] $end
$var wire 1 I( prod_full [-8] $end
$var wire 1 J( prod_full [-9] $end
$var wire 1 K( prod_full [-10] $end
$var wire 1 L( prod_full [-11] $end
$var wire 1 M( prod_full [-12] $end
$var wire 1 N( prod_full [-13] $end
$var wire 1 O( prod_full [-14] $end
$var wire 1 P( prod_full [-15] $end
$var wire 1 Q( prod_full [-16] $end
$var wire 1 R( prod_full [-17] $end
$var wire 1 S( prod_full [-18] $end
$var wire 1 T( prod_full [-19] $end
$var wire 1 U( prod_full [-20] $end
$var wire 1 V( prod_full [-21] $end
$var wire 1 W( prod_full [-22] $end
$var wire 1 X( prod_full [-23] $end
$var wire 1 Y( prod_full [-24] $end
$var wire 1 Z( loopback_sum [3] $end
$var wire 1 [( loopback_sum [2] $end
$var wire 1 \( loopback_sum [1] $end
$var wire 1 ]( loopback_sum [0] $end
$var wire 1 ^( loopback_sum [-1] $end
$var wire 1 _( loopback_sum [-2] $end
$var wire 1 `( loopback_sum [-3] $end
$var wire 1 a( loopback_sum [-4] $end
$var wire 1 b( loopback_sum [-5] $end
$var wire 1 c( loopback_sum [-6] $end
$var wire 1 d( loopback_sum [-7] $end
$var wire 1 e( loopback_sum [-8] $end
$var wire 1 f( loopback_sum [-9] $end
$var wire 1 g( loopback_sum [-10] $end
$var wire 1 h( loopback_sum [-11] $end
$var wire 1 i( loopback_sum [-12] $end
$var wire 1 j( sum_pos_overflow $end
$var wire 1 k( sum_neg_overflow $end
$var wire 1 l( prod_pos_overflow $end
$var wire 1 m( prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[1] $end

$scope module w_mem $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 $% data_in [15] $end
$var wire 1 #% data_in [14] $end
$var wire 1 "% data_in [13] $end
$var wire 1 !% data_in [12] $end
$var wire 1 ~$ data_in [11] $end
$var wire 1 }$ data_in [10] $end
$var wire 1 |$ data_in [9] $end
$var wire 1 {$ data_in [8] $end
$var wire 1 z$ data_in [7] $end
$var wire 1 y$ data_in [6] $end
$var wire 1 x$ data_in [5] $end
$var wire 1 w$ data_in [4] $end
$var wire 1 v$ data_in [3] $end
$var wire 1 u$ data_in [2] $end
$var wire 1 t$ data_in [1] $end
$var wire 1 s$ data_in [0] $end
$var wire 1 `# data_out [15] $end
$var wire 1 _# data_out [14] $end
$var wire 1 ^# data_out [13] $end
$var wire 1 ]# data_out [12] $end
$var wire 1 \# data_out [11] $end
$var wire 1 [# data_out [10] $end
$var wire 1 Z# data_out [9] $end
$var wire 1 Y# data_out [8] $end
$var wire 1 X# data_out [7] $end
$var wire 1 W# data_out [6] $end
$var wire 1 V# data_out [5] $end
$var wire 1 U# data_out [4] $end
$var wire 1 T# data_out [3] $end
$var wire 1 S# data_out [2] $end
$var wire 1 R# data_out [1] $end
$var wire 1 Q# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 =" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 `# w [3] $end
$var wire 1 _# w [2] $end
$var wire 1 ^# w [1] $end
$var wire 1 ]# w [0] $end
$var wire 1 \# w [-1] $end
$var wire 1 [# w [-2] $end
$var wire 1 Z# w [-3] $end
$var wire 1 Y# w [-4] $end
$var wire 1 X# w [-5] $end
$var wire 1 W# w [-6] $end
$var wire 1 V# w [-7] $end
$var wire 1 U# w [-8] $end
$var wire 1 T# w [-9] $end
$var wire 1 S# w [-10] $end
$var wire 1 R# w [-11] $end
$var wire 1 Q# w [-12] $end
$var wire 1 w( prod_full [7] $end
$var wire 1 x( prod_full [6] $end
$var wire 1 y( prod_full [5] $end
$var wire 1 z( prod_full [4] $end
$var wire 1 {( prod_full [3] $end
$var wire 1 |( prod_full [2] $end
$var wire 1 }( prod_full [1] $end
$var wire 1 ~( prod_full [0] $end
$var wire 1 !) prod_full [-1] $end
$var wire 1 ") prod_full [-2] $end
$var wire 1 #) prod_full [-3] $end
$var wire 1 $) prod_full [-4] $end
$var wire 1 %) prod_full [-5] $end
$var wire 1 &) prod_full [-6] $end
$var wire 1 ') prod_full [-7] $end
$var wire 1 () prod_full [-8] $end
$var wire 1 )) prod_full [-9] $end
$var wire 1 *) prod_full [-10] $end
$var wire 1 +) prod_full [-11] $end
$var wire 1 ,) prod_full [-12] $end
$var wire 1 -) prod_full [-13] $end
$var wire 1 .) prod_full [-14] $end
$var wire 1 /) prod_full [-15] $end
$var wire 1 0) prod_full [-16] $end
$var wire 1 1) prod_full [-17] $end
$var wire 1 2) prod_full [-18] $end
$var wire 1 3) prod_full [-19] $end
$var wire 1 4) prod_full [-20] $end
$var wire 1 5) prod_full [-21] $end
$var wire 1 6) prod_full [-22] $end
$var wire 1 7) prod_full [-23] $end
$var wire 1 8) prod_full [-24] $end
$var wire 1 9) loopback_sum [3] $end
$var wire 1 :) loopback_sum [2] $end
$var wire 1 ;) loopback_sum [1] $end
$var wire 1 <) loopback_sum [0] $end
$var wire 1 =) loopback_sum [-1] $end
$var wire 1 >) loopback_sum [-2] $end
$var wire 1 ?) loopback_sum [-3] $end
$var wire 1 @) loopback_sum [-4] $end
$var wire 1 A) loopback_sum [-5] $end
$var wire 1 B) loopback_sum [-6] $end
$var wire 1 C) loopback_sum [-7] $end
$var wire 1 D) loopback_sum [-8] $end
$var wire 1 E) loopback_sum [-9] $end
$var wire 1 F) loopback_sum [-10] $end
$var wire 1 G) loopback_sum [-11] $end
$var wire 1 H) loopback_sum [-12] $end
$var wire 1 I) sum_pos_overflow $end
$var wire 1 J) sum_neg_overflow $end
$var wire 1 K) prod_pos_overflow $end
$var wire 1 L) prod_neg_overflow $end
$upscope $end
$upscope $end

$scope begin mac_gen[0] $end

$scope module w_mem $end
$var wire 1 9" clk $end
$var wire 1 ]" write_enable $end
$var wire 1 S" read_addr [4] $end
$var wire 1 T" read_addr [3] $end
$var wire 1 U" read_addr [2] $end
$var wire 1 V" read_addr [1] $end
$var wire 1 W" read_addr [0] $end
$var wire 1 X" write_addr [4] $end
$var wire 1 Y" write_addr [3] $end
$var wire 1 Z" write_addr [2] $end
$var wire 1 [" write_addr [1] $end
$var wire 1 \" write_addr [0] $end
$var wire 1 r$ data_in [15] $end
$var wire 1 q$ data_in [14] $end
$var wire 1 p$ data_in [13] $end
$var wire 1 o$ data_in [12] $end
$var wire 1 n$ data_in [11] $end
$var wire 1 m$ data_in [10] $end
$var wire 1 l$ data_in [9] $end
$var wire 1 k$ data_in [8] $end
$var wire 1 j$ data_in [7] $end
$var wire 1 i$ data_in [6] $end
$var wire 1 h$ data_in [5] $end
$var wire 1 g$ data_in [4] $end
$var wire 1 f$ data_in [3] $end
$var wire 1 e$ data_in [2] $end
$var wire 1 d$ data_in [1] $end
$var wire 1 c$ data_in [0] $end
$var wire 1 P# data_out [15] $end
$var wire 1 O# data_out [14] $end
$var wire 1 N# data_out [13] $end
$var wire 1 M# data_out [12] $end
$var wire 1 L# data_out [11] $end
$var wire 1 K# data_out [10] $end
$var wire 1 J# data_out [9] $end
$var wire 1 I# data_out [8] $end
$var wire 1 H# data_out [7] $end
$var wire 1 G# data_out [6] $end
$var wire 1 F# data_out [5] $end
$var wire 1 E# data_out [4] $end
$var wire 1 D# data_out [3] $end
$var wire 1 C# data_out [2] $end
$var wire 1 B# data_out [1] $end
$var wire 1 A# data_out [0] $end
$upscope $end

$scope module mac_unit $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 >" mac_reg_enable $end
$var wire 1 ?" mac_x_select $end
$var wire 1 @" mac_w_select $end
$var wire 1 A" mac_acc_loopback $end
$var wire 1 B" mac_acc_update $end
$var wire 1 1# x [3] $end
$var wire 1 2# x [2] $end
$var wire 1 3# x [1] $end
$var wire 1 4# x [0] $end
$var wire 1 5# x [-1] $end
$var wire 1 6# x [-2] $end
$var wire 1 7# x [-3] $end
$var wire 1 8# x [-4] $end
$var wire 1 9# x [-5] $end
$var wire 1 :# x [-6] $end
$var wire 1 ;# x [-7] $end
$var wire 1 <# x [-8] $end
$var wire 1 =# x [-9] $end
$var wire 1 ># x [-10] $end
$var wire 1 ?# x [-11] $end
$var wire 1 @# x [-12] $end
$var wire 1 P# w [3] $end
$var wire 1 O# w [2] $end
$var wire 1 N# w [1] $end
$var wire 1 M# w [0] $end
$var wire 1 L# w [-1] $end
$var wire 1 K# w [-2] $end
$var wire 1 J# w [-3] $end
$var wire 1 I# w [-4] $end
$var wire 1 H# w [-5] $end
$var wire 1 G# w [-6] $end
$var wire 1 F# w [-7] $end
$var wire 1 E# w [-8] $end
$var wire 1 D# w [-9] $end
$var wire 1 C# w [-10] $end
$var wire 1 B# w [-11] $end
$var wire 1 A# w [-12] $end
$var wire 1 V) prod_full [7] $end
$var wire 1 W) prod_full [6] $end
$var wire 1 X) prod_full [5] $end
$var wire 1 Y) prod_full [4] $end
$var wire 1 Z) prod_full [3] $end
$var wire 1 [) prod_full [2] $end
$var wire 1 \) prod_full [1] $end
$var wire 1 ]) prod_full [0] $end
$var wire 1 ^) prod_full [-1] $end
$var wire 1 _) prod_full [-2] $end
$var wire 1 `) prod_full [-3] $end
$var wire 1 a) prod_full [-4] $end
$var wire 1 b) prod_full [-5] $end
$var wire 1 c) prod_full [-6] $end
$var wire 1 d) prod_full [-7] $end
$var wire 1 e) prod_full [-8] $end
$var wire 1 f) prod_full [-9] $end
$var wire 1 g) prod_full [-10] $end
$var wire 1 h) prod_full [-11] $end
$var wire 1 i) prod_full [-12] $end
$var wire 1 j) prod_full [-13] $end
$var wire 1 k) prod_full [-14] $end
$var wire 1 l) prod_full [-15] $end
$var wire 1 m) prod_full [-16] $end
$var wire 1 n) prod_full [-17] $end
$var wire 1 o) prod_full [-18] $end
$var wire 1 p) prod_full [-19] $end
$var wire 1 q) prod_full [-20] $end
$var wire 1 r) prod_full [-21] $end
$var wire 1 s) prod_full [-22] $end
$var wire 1 t) prod_full [-23] $end
$var wire 1 u) prod_full [-24] $end
$var wire 1 v) loopback_sum [3] $end
$var wire 1 w) loopback_sum [2] $end
$var wire 1 x) loopback_sum [1] $end
$var wire 1 y) loopback_sum [0] $end
$var wire 1 z) loopback_sum [-1] $end
$var wire 1 {) loopback_sum [-2] $end
$var wire 1 |) loopback_sum [-3] $end
$var wire 1 }) loopback_sum [-4] $end
$var wire 1 ~) loopback_sum [-5] $end
$var wire 1 !* loopback_sum [-6] $end
$var wire 1 "* loopback_sum [-7] $end
$var wire 1 #* loopback_sum [-8] $end
$var wire 1 $* loopback_sum [-9] $end
$var wire 1 %* loopback_sum [-10] $end
$var wire 1 &* loopback_sum [-11] $end
$var wire 1 '* loopback_sum [-12] $end
$var wire 1 (* sum_pos_overflow $end
$var wire 1 )* sum_neg_overflow $end
$var wire 1 ** prod_pos_overflow $end
$var wire 1 +* prod_neg_overflow $end
$upscope $end
$upscope $end

$scope module xy_mem $end
$var wire 1 9" clk $end
$var wire 1 P" write_enable $end
$var wire 1 F" read_addr [4] $end
$var wire 1 G" read_addr [3] $end
$var wire 1 H" read_addr [2] $end
$var wire 1 I" read_addr [1] $end
$var wire 1 J" read_addr [0] $end
$var wire 1 K" write_addr [4] $end
$var wire 1 L" write_addr [3] $end
$var wire 1 M" write_addr [2] $end
$var wire 1 N" write_addr [1] $end
$var wire 1 O" write_addr [0] $end
$var wire 1 i& data_in [15] $end
$var wire 1 j& data_in [14] $end
$var wire 1 k& data_in [13] $end
$var wire 1 l& data_in [12] $end
$var wire 1 m& data_in [11] $end
$var wire 1 n& data_in [10] $end
$var wire 1 o& data_in [9] $end
$var wire 1 p& data_in [8] $end
$var wire 1 q& data_in [7] $end
$var wire 1 r& data_in [6] $end
$var wire 1 s& data_in [5] $end
$var wire 1 t& data_in [4] $end
$var wire 1 u& data_in [3] $end
$var wire 1 v& data_in [2] $end
$var wire 1 w& data_in [1] $end
$var wire 1 x& data_in [0] $end
$var wire 1 1# data_out [15] $end
$var wire 1 2# data_out [14] $end
$var wire 1 3# data_out [13] $end
$var wire 1 4# data_out [12] $end
$var wire 1 5# data_out [11] $end
$var wire 1 6# data_out [10] $end
$var wire 1 7# data_out [9] $end
$var wire 1 8# data_out [8] $end
$var wire 1 9# data_out [7] $end
$var wire 1 :# data_out [6] $end
$var wire 1 ;# data_out [5] $end
$var wire 1 <# data_out [4] $end
$var wire 1 =# data_out [3] $end
$var wire 1 ># data_out [2] $end
$var wire 1 ?# data_out [1] $end
$var wire 1 @# data_out [0] $end
$upscope $end

$scope module adder $end
$var wire 1 9" clk $end
$var wire 1 E% x [0] $end
$var wire 1 F% x [1] $end
$var wire 1 G% x [2] $end
$var wire 1 H% x [3] $end
$var wire 1 I% x [4] $end
$var wire 1 J% x [5] $end
$var wire 1 K% x [6] $end
$var wire 1 L% x [7] $end
$var wire 1 M% x [8] $end
$var wire 1 N% x [9] $end
$var wire 1 O% x [10] $end
$var wire 1 P% x [11] $end
$var wire 1 Q% x [12] $end
$var wire 1 R% x [13] $end
$var wire 1 S% x [14] $end
$var wire 1 T% x [15] $end
$var wire 1 U% x [16] $end
$var wire 1 V% x [17] $end
$var wire 1 W% x [18] $end
$var wire 1 X% x [19] $end
$var wire 1 Y% x [20] $end
$var wire 1 Z% x [21] $end
$var wire 1 [% x [22] $end
$var wire 1 \% x [23] $end
$var wire 1 ]% x [24] $end
$var wire 1 ^% x [25] $end
$var wire 1 _% x [26] $end
$var wire 1 `% x [27] $end
$var wire 1 a% x [28] $end
$var wire 1 b% x [29] $end
$var wire 1 c% x [30] $end
$var wire 1 d% x [31] $end
$var wire 1 e% x [32] $end
$var wire 1 f% x [33] $end
$var wire 1 g% x [34] $end
$var wire 1 h% x [35] $end
$var wire 1 i% x [36] $end
$var wire 1 j% x [37] $end
$var wire 1 k% x [38] $end
$var wire 1 l% x [39] $end
$var wire 1 m% x [40] $end
$var wire 1 n% x [41] $end
$var wire 1 o% x [42] $end
$var wire 1 p% x [43] $end
$var wire 1 q% x [44] $end
$var wire 1 r% x [45] $end
$var wire 1 s% x [46] $end
$var wire 1 t% x [47] $end
$var wire 1 u% x [48] $end
$var wire 1 v% x [49] $end
$var wire 1 w% x [50] $end
$var wire 1 x% x [51] $end
$var wire 1 y% x [52] $end
$var wire 1 z% x [53] $end
$var wire 1 {% x [54] $end
$var wire 1 |% x [55] $end
$var wire 1 }% x [56] $end
$var wire 1 ~% x [57] $end
$var wire 1 !& x [58] $end
$var wire 1 "& x [59] $end
$var wire 1 #& x [60] $end
$var wire 1 $& x [61] $end
$var wire 1 %& x [62] $end
$var wire 1 && x [63] $end
$var wire 1 '& y [15] $end
$var wire 1 (& y [14] $end
$var wire 1 )& y [13] $end
$var wire 1 *& y [12] $end
$var wire 1 +& y [11] $end
$var wire 1 ,& y [10] $end
$var wire 1 -& y [9] $end
$var wire 1 .& y [8] $end
$var wire 1 /& y [7] $end
$var wire 1 0& y [6] $end
$var wire 1 1& y [5] $end
$var wire 1 2& y [4] $end
$var wire 1 3& y [3] $end
$var wire 1 4& y [2] $end
$var wire 1 5& y [1] $end
$var wire 1 6& y [0] $end
$var wire 1 0* s [0] $end
$var wire 1 1* s [1] $end
$var wire 1 2* s [2] $end
$var wire 1 3* s [3] $end
$var wire 1 4* s [4] $end
$var wire 1 5* s [5] $end
$var wire 1 6* s [6] $end
$var wire 1 7* s [7] $end
$var wire 1 8* s [8] $end
$var wire 1 9* s [9] $end
$var wire 1 :* s [10] $end
$var wire 1 ;* s [11] $end
$var wire 1 <* s [12] $end
$var wire 1 =* s [13] $end
$var wire 1 >* s [14] $end
$var wire 1 ?* s [15] $end
$var wire 1 @* s [16] $end
$var wire 1 A* s [17] $end
$var wire 1 B* s [18] $end
$var wire 1 C* s [19] $end
$var wire 1 D* s [20] $end
$var wire 1 E* s [21] $end
$var wire 1 F* s [22] $end
$var wire 1 G* s [23] $end
$var wire 1 H* s [24] $end
$var wire 1 I* s [25] $end
$var wire 1 J* s [26] $end
$var wire 1 K* s [27] $end
$var wire 1 L* s [28] $end
$var wire 1 M* s [29] $end
$var wire 1 N* s [30] $end
$var wire 1 O* s [31] $end
$var wire 1 P* s [32] $end
$var wire 1 Q* s [33] $end
$var wire 1 R* s [34] $end
$var wire 1 S* s [35] $end
$var wire 1 T* s [36] $end
$var wire 1 U* s [37] $end
$var wire 1 V* s [38] $end
$var wire 1 W* s [39] $end
$var wire 1 X* s [40] $end
$var wire 1 Y* s [41] $end
$var wire 1 Z* s [42] $end
$var wire 1 [* s [43] $end
$var wire 1 \* s [44] $end
$var wire 1 ]* s [45] $end
$var wire 1 ^* s [46] $end
$var wire 1 _* s [47] $end
$var wire 1 `* s [48] $end
$var wire 1 a* s [49] $end
$var wire 1 b* s [50] $end
$var wire 1 c* s [51] $end
$var wire 1 d* s [52] $end
$var wire 1 e* s [53] $end
$var wire 1 f* s [54] $end
$var wire 1 g* s [55] $end
$var wire 1 h* s [56] $end
$var wire 1 i* s [57] $end
$var wire 1 j* s [58] $end
$var wire 1 k* s [59] $end
$var wire 1 l* s [60] $end
$var wire 1 m* s [61] $end
$var wire 1 n* s [62] $end
$var wire 1 o* s [63] $end
$var wire 1 p* s [64] $end
$var wire 1 q* s [65] $end
$var wire 1 r* s [66] $end
$var wire 1 s* s [67] $end
$var wire 1 t* s [68] $end
$var wire 1 u* s [69] $end
$var wire 1 v* s [70] $end
$var wire 1 w* s [71] $end
$var wire 1 x* s [72] $end
$var wire 1 y* s [73] $end
$var wire 1 z* s [74] $end
$var wire 1 {* s [75] $end
$var wire 1 |* s [76] $end
$var wire 1 }* s [77] $end
$var wire 1 ~* s [78] $end
$var wire 1 !+ s [79] $end
$var wire 1 "+ s [80] $end
$var wire 1 #+ s [81] $end
$var wire 1 $+ s [82] $end
$var wire 1 %+ s [83] $end
$var wire 1 &+ s [84] $end
$var wire 1 '+ s [85] $end
$var wire 1 (+ s [86] $end
$var wire 1 )+ s [87] $end
$var wire 1 *+ s [88] $end
$var wire 1 ++ s [89] $end
$var wire 1 ,+ s [90] $end
$var wire 1 -+ s [91] $end
$var wire 1 .+ s [92] $end
$var wire 1 /+ s [93] $end
$var wire 1 0+ s [94] $end
$var wire 1 1+ s [95] $end
$var wire 1 2+ s [96] $end
$var wire 1 3+ s [97] $end
$var wire 1 4+ s [98] $end
$var wire 1 5+ s [99] $end
$var wire 1 6+ s [100] $end
$var wire 1 7+ s [101] $end
$var wire 1 8+ s [102] $end
$var wire 1 9+ s [103] $end
$var wire 1 :+ s [104] $end
$var wire 1 ;+ s [105] $end
$var wire 1 <+ s [106] $end
$var wire 1 =+ s [107] $end
$var wire 1 >+ s [108] $end
$var wire 1 ?+ s [109] $end
$var wire 1 @+ s [110] $end
$var wire 1 A+ s [111] $end
$upscope $end

$scope module serializer $end
$var wire 1 9" clk $end
$var wire 1 C" serializer_update $end
$var wire 1 #$ data_in [0] $end
$var wire 1 $$ data_in [1] $end
$var wire 1 %$ data_in [2] $end
$var wire 1 &$ data_in [3] $end
$var wire 1 '$ data_in [4] $end
$var wire 1 ($ data_in [5] $end
$var wire 1 )$ data_in [6] $end
$var wire 1 *$ data_in [7] $end
$var wire 1 +$ data_in [8] $end
$var wire 1 ,$ data_in [9] $end
$var wire 1 -$ data_in [10] $end
$var wire 1 .$ data_in [11] $end
$var wire 1 /$ data_in [12] $end
$var wire 1 0$ data_in [13] $end
$var wire 1 1$ data_in [14] $end
$var wire 1 2$ data_in [15] $end
$var wire 1 3$ data_in [16] $end
$var wire 1 4$ data_in [17] $end
$var wire 1 5$ data_in [18] $end
$var wire 1 6$ data_in [19] $end
$var wire 1 7$ data_in [20] $end
$var wire 1 8$ data_in [21] $end
$var wire 1 9$ data_in [22] $end
$var wire 1 :$ data_in [23] $end
$var wire 1 ;$ data_in [24] $end
$var wire 1 <$ data_in [25] $end
$var wire 1 =$ data_in [26] $end
$var wire 1 >$ data_in [27] $end
$var wire 1 ?$ data_in [28] $end
$var wire 1 @$ data_in [29] $end
$var wire 1 A$ data_in [30] $end
$var wire 1 B$ data_in [31] $end
$var wire 1 C$ data_in [32] $end
$var wire 1 D$ data_in [33] $end
$var wire 1 E$ data_in [34] $end
$var wire 1 F$ data_in [35] $end
$var wire 1 G$ data_in [36] $end
$var wire 1 H$ data_in [37] $end
$var wire 1 I$ data_in [38] $end
$var wire 1 J$ data_in [39] $end
$var wire 1 K$ data_in [40] $end
$var wire 1 L$ data_in [41] $end
$var wire 1 M$ data_in [42] $end
$var wire 1 N$ data_in [43] $end
$var wire 1 O$ data_in [44] $end
$var wire 1 P$ data_in [45] $end
$var wire 1 Q$ data_in [46] $end
$var wire 1 R$ data_in [47] $end
$var wire 1 S$ data_in [48] $end
$var wire 1 T$ data_in [49] $end
$var wire 1 U$ data_in [50] $end
$var wire 1 V$ data_in [51] $end
$var wire 1 W$ data_in [52] $end
$var wire 1 X$ data_in [53] $end
$var wire 1 Y$ data_in [54] $end
$var wire 1 Z$ data_in [55] $end
$var wire 1 [$ data_in [56] $end
$var wire 1 \$ data_in [57] $end
$var wire 1 ]$ data_in [58] $end
$var wire 1 ^$ data_in [59] $end
$var wire 1 _$ data_in [60] $end
$var wire 1 `$ data_in [61] $end
$var wire 1 a$ data_in [62] $end
$var wire 1 b$ data_in [63] $end
$var wire 1 7& serial_out [15] $end
$var wire 1 8& serial_out [14] $end
$var wire 1 9& serial_out [13] $end
$var wire 1 :& serial_out [12] $end
$var wire 1 ;& serial_out [11] $end
$var wire 1 <& serial_out [10] $end
$var wire 1 =& serial_out [9] $end
$var wire 1 >& serial_out [8] $end
$var wire 1 ?& serial_out [7] $end
$var wire 1 @& serial_out [6] $end
$var wire 1 A& serial_out [5] $end
$var wire 1 B& serial_out [4] $end
$var wire 1 C& serial_out [3] $end
$var wire 1 D& serial_out [2] $end
$var wire 1 E& serial_out [1] $end
$var wire 1 F& serial_out [0] $end
$upscope $end

$scope module activation_function $end
$var wire 1 9" clk $end
$var wire 1 Q' write_enable $end
$var wire 1 +' write_addr [5] $end
$var wire 1 ,' write_addr [4] $end
$var wire 1 -' write_addr [3] $end
$var wire 1 .' write_addr [2] $end
$var wire 1 /' write_addr [1] $end
$var wire 1 0' write_addr [0] $end
$var wire 1 1' write_data [31] $end
$var wire 1 2' write_data [30] $end
$var wire 1 3' write_data [29] $end
$var wire 1 4' write_data [28] $end
$var wire 1 5' write_data [27] $end
$var wire 1 6' write_data [26] $end
$var wire 1 7' write_data [25] $end
$var wire 1 8' write_data [24] $end
$var wire 1 9' write_data [23] $end
$var wire 1 :' write_data [22] $end
$var wire 1 ;' write_data [21] $end
$var wire 1 <' write_data [20] $end
$var wire 1 =' write_data [19] $end
$var wire 1 >' write_data [18] $end
$var wire 1 ?' write_data [17] $end
$var wire 1 @' write_data [16] $end
$var wire 1 A' write_data [15] $end
$var wire 1 B' write_data [14] $end
$var wire 1 C' write_data [13] $end
$var wire 1 D' write_data [12] $end
$var wire 1 E' write_data [11] $end
$var wire 1 F' write_data [10] $end
$var wire 1 G' write_data [9] $end
$var wire 1 H' write_data [8] $end
$var wire 1 I' write_data [7] $end
$var wire 1 J' write_data [6] $end
$var wire 1 K' write_data [5] $end
$var wire 1 L' write_data [4] $end
$var wire 1 M' write_data [3] $end
$var wire 1 N' write_data [2] $end
$var wire 1 O' write_data [1] $end
$var wire 1 P' write_data [0] $end
$var wire 1 G& x [3] $end
$var wire 1 H& x [2] $end
$var wire 1 I& x [1] $end
$var wire 1 J& x [0] $end
$var wire 1 K& x [-1] $end
$var wire 1 L& x [-2] $end
$var wire 1 M& x [-3] $end
$var wire 1 N& x [-4] $end
$var wire 1 O& x [-5] $end
$var wire 1 P& x [-6] $end
$var wire 1 Q& x [-7] $end
$var wire 1 R& x [-8] $end
$var wire 1 S& x [-9] $end
$var wire 1 T& x [-10] $end
$var wire 1 U& x [-11] $end
$var wire 1 V& x [-12] $end
$var wire 1 E" act_bypass $end
$var wire 1 g& mask [1] $end
$var wire 1 h& mask [0] $end
$var wire 1 W& fx [3] $end
$var wire 1 X& fx [2] $end
$var wire 1 Y& fx [1] $end
$var wire 1 Z& fx [0] $end
$var wire 1 [& fx [-1] $end
$var wire 1 \& fx [-2] $end
$var wire 1 ]& fx [-3] $end
$var wire 1 ^& fx [-4] $end
$var wire 1 _& fx [-5] $end
$var wire 1 `& fx [-6] $end
$var wire 1 a& fx [-7] $end
$var wire 1 b& fx [-8] $end
$var wire 1 c& fx [-9] $end
$var wire 1 d& fx [-10] $end
$var wire 1 e& fx [-11] $end
$var wire 1 f& fx [-12] $end
$var wire 1 L+ a_coef [3] $end
$var wire 1 M+ a_coef [2] $end
$var wire 1 N+ a_coef [1] $end
$var wire 1 O+ a_coef [0] $end
$var wire 1 P+ a_coef [-1] $end
$var wire 1 Q+ a_coef [-2] $end
$var wire 1 R+ a_coef [-3] $end
$var wire 1 S+ a_coef [-4] $end
$var wire 1 T+ a_coef [-5] $end
$var wire 1 U+ a_coef [-6] $end
$var wire 1 V+ a_coef [-7] $end
$var wire 1 W+ a_coef [-8] $end
$var wire 1 X+ a_coef [-9] $end
$var wire 1 Y+ a_coef [-10] $end
$var wire 1 Z+ a_coef [-11] $end
$var wire 1 [+ a_coef [-12] $end
$var wire 1 \+ b_coef [3] $end
$var wire 1 ]+ b_coef [2] $end
$var wire 1 ^+ b_coef [1] $end
$var wire 1 _+ b_coef [0] $end
$var wire 1 `+ b_coef [-1] $end
$var wire 1 a+ b_coef [-2] $end
$var wire 1 b+ b_coef [-3] $end
$var wire 1 c+ b_coef [-4] $end
$var wire 1 d+ b_coef [-5] $end
$var wire 1 e+ b_coef [-6] $end
$var wire 1 f+ b_coef [-7] $end
$var wire 1 g+ b_coef [-8] $end
$var wire 1 h+ b_coef [-9] $end
$var wire 1 i+ b_coef [-10] $end
$var wire 1 j+ b_coef [-11] $end
$var wire 1 k+ b_coef [-12] $end
$var wire 1 l+ full_product [7] $end
$var wire 1 m+ full_product [6] $end
$var wire 1 n+ full_product [5] $end
$var wire 1 o+ full_product [4] $end
$var wire 1 p+ full_product [3] $end
$var wire 1 q+ full_product [2] $end
$var wire 1 r+ full_product [1] $end
$var wire 1 s+ full_product [0] $end
$var wire 1 t+ full_product [-1] $end
$var wire 1 u+ full_product [-2] $end
$var wire 1 v+ full_product [-3] $end
$var wire 1 w+ full_product [-4] $end
$var wire 1 x+ full_product [-5] $end
$var wire 1 y+ full_product [-6] $end
$var wire 1 z+ full_product [-7] $end
$var wire 1 {+ full_product [-8] $end
$var wire 1 |+ full_product [-9] $end
$var wire 1 }+ full_product [-10] $end
$var wire 1 ~+ full_product [-11] $end
$var wire 1 !, full_product [-12] $end
$var wire 1 ", full_product [-13] $end
$var wire 1 #, full_product [-14] $end
$var wire 1 $, full_product [-15] $end
$var wire 1 %, full_product [-16] $end
$var wire 1 &, full_product [-17] $end
$var wire 1 ', full_product [-18] $end
$var wire 1 (, full_product [-19] $end
$var wire 1 ), full_product [-20] $end
$var wire 1 *, full_product [-21] $end
$var wire 1 +, full_product [-22] $end
$var wire 1 ,, full_product [-23] $end
$var wire 1 -, full_product [-24] $end
$var wire 1 ., b_shifted [7] $end
$var wire 1 /, b_shifted [6] $end
$var wire 1 0, b_shifted [5] $end
$var wire 1 1, b_shifted [4] $end
$var wire 1 2, b_shifted [3] $end
$var wire 1 3, b_shifted [2] $end
$var wire 1 4, b_shifted [1] $end
$var wire 1 5, b_shifted [0] $end
$var wire 1 6, b_shifted [-1] $end
$var wire 1 7, b_shifted [-2] $end
$var wire 1 8, b_shifted [-3] $end
$var wire 1 9, b_shifted [-4] $end
$var wire 1 :, b_shifted [-5] $end
$var wire 1 ;, b_shifted [-6] $end
$var wire 1 <, b_shifted [-7] $end
$var wire 1 =, b_shifted [-8] $end
$var wire 1 >, b_shifted [-9] $end
$var wire 1 ?, b_shifted [-10] $end
$var wire 1 @, b_shifted [-11] $end
$var wire 1 A, b_shifted [-12] $end
$var wire 1 B, b_shifted [-13] $end
$var wire 1 C, b_shifted [-14] $end
$var wire 1 D, b_shifted [-15] $end
$var wire 1 E, b_shifted [-16] $end
$var wire 1 F, b_shifted [-17] $end
$var wire 1 G, b_shifted [-18] $end
$var wire 1 H, b_shifted [-19] $end
$var wire 1 I, b_shifted [-20] $end
$var wire 1 J, b_shifted [-21] $end
$var wire 1 K, b_shifted [-22] $end
$var wire 1 L, b_shifted [-23] $end
$var wire 1 M, b_shifted [-24] $end
$var wire 1 N, interp [3] $end
$var wire 1 O, interp [2] $end
$var wire 1 P, interp [1] $end
$var wire 1 Q, interp [0] $end
$var wire 1 R, interp [-1] $end
$var wire 1 S, interp [-2] $end
$var wire 1 T, interp [-3] $end
$var wire 1 U, interp [-4] $end
$var wire 1 V, interp [-5] $end
$var wire 1 W, interp [-6] $end
$var wire 1 X, interp [-7] $end
$var wire 1 Y, interp [-8] $end
$var wire 1 Z, interp [-9] $end
$var wire 1 [, interp [-10] $end
$var wire 1 \, interp [-11] $end
$var wire 1 ], interp [-12] $end

$scope module lookup_table $end
$var wire 1 9" clk $end
$var wire 1 Q' write_enable $end
$var wire 1 g& read_addr [7] $end
$var wire 1 h& read_addr [6] $end
$var wire 1 G& read_addr [5] $end
$var wire 1 H& read_addr [4] $end
$var wire 1 I& read_addr [3] $end
$var wire 1 J& read_addr [2] $end
$var wire 1 K& read_addr [1] $end
$var wire 1 L& read_addr [0] $end
$var wire 1 g& write_addr [7] $end
$var wire 1 h& write_addr [6] $end
$var wire 1 +' write_addr [5] $end
$var wire 1 ,' write_addr [4] $end
$var wire 1 -' write_addr [3] $end
$var wire 1 .' write_addr [2] $end
$var wire 1 /' write_addr [1] $end
$var wire 1 0' write_addr [0] $end
$var wire 1 1' data_in [31] $end
$var wire 1 2' data_in [30] $end
$var wire 1 3' data_in [29] $end
$var wire 1 4' data_in [28] $end
$var wire 1 5' data_in [27] $end
$var wire 1 6' data_in [26] $end
$var wire 1 7' data_in [25] $end
$var wire 1 8' data_in [24] $end
$var wire 1 9' data_in [23] $end
$var wire 1 :' data_in [22] $end
$var wire 1 ;' data_in [21] $end
$var wire 1 <' data_in [20] $end
$var wire 1 =' data_in [19] $end
$var wire 1 >' data_in [18] $end
$var wire 1 ?' data_in [17] $end
$var wire 1 @' data_in [16] $end
$var wire 1 A' data_in [15] $end
$var wire 1 B' data_in [14] $end
$var wire 1 C' data_in [13] $end
$var wire 1 D' data_in [12] $end
$var wire 1 E' data_in [11] $end
$var wire 1 F' data_in [10] $end
$var wire 1 G' data_in [9] $end
$var wire 1 H' data_in [8] $end
$var wire 1 I' data_in [7] $end
$var wire 1 J' data_in [6] $end
$var wire 1 K' data_in [5] $end
$var wire 1 L' data_in [4] $end
$var wire 1 M' data_in [3] $end
$var wire 1 N' data_in [2] $end
$var wire 1 O' data_in [1] $end
$var wire 1 P' data_in [0] $end
$var wire 1 L+ data_out [31] $end
$var wire 1 M+ data_out [30] $end
$var wire 1 N+ data_out [29] $end
$var wire 1 O+ data_out [28] $end
$var wire 1 P+ data_out [27] $end
$var wire 1 Q+ data_out [26] $end
$var wire 1 R+ data_out [25] $end
$var wire 1 S+ data_out [24] $end
$var wire 1 T+ data_out [23] $end
$var wire 1 U+ data_out [22] $end
$var wire 1 V+ data_out [21] $end
$var wire 1 W+ data_out [20] $end
$var wire 1 X+ data_out [19] $end
$var wire 1 Y+ data_out [18] $end
$var wire 1 Z+ data_out [17] $end
$var wire 1 [+ data_out [16] $end
$var wire 1 \+ data_out [15] $end
$var wire 1 ]+ data_out [14] $end
$var wire 1 ^+ data_out [13] $end
$var wire 1 _+ data_out [12] $end
$var wire 1 `+ data_out [11] $end
$var wire 1 a+ data_out [10] $end
$var wire 1 b+ data_out [9] $end
$var wire 1 c+ data_out [8] $end
$var wire 1 d+ data_out [7] $end
$var wire 1 e+ data_out [6] $end
$var wire 1 f+ data_out [5] $end
$var wire 1 g+ data_out [4] $end
$var wire 1 h+ data_out [3] $end
$var wire 1 i+ data_out [2] $end
$var wire 1 j+ data_out [1] $end
$var wire 1 k+ data_out [0] $end
$upscope $end
$upscope $end

$scope module inst_mem $end
$var wire 1 9" clk $end
$var wire 1 ^" write_enable $end
$var wire 1 _" read_addr [7] $end
$var wire 1 `" read_addr [6] $end
$var wire 1 a" read_addr [5] $end
$var wire 1 b" read_addr [4] $end
$var wire 1 c" read_addr [3] $end
$var wire 1 d" read_addr [2] $end
$var wire 1 e" read_addr [1] $end
$var wire 1 f" read_addr [0] $end
$var wire 1 g" write_addr [7] $end
$var wire 1 h" write_addr [6] $end
$var wire 1 i" write_addr [5] $end
$var wire 1 j" write_addr [4] $end
$var wire 1 k" write_addr [3] $end
$var wire 1 l" write_addr [2] $end
$var wire 1 m" write_addr [1] $end
$var wire 1 n" write_addr [0] $end
$var wire 1 b, data_in [31] $end
$var wire 1 c, data_in [30] $end
$var wire 1 d, data_in [29] $end
$var wire 1 e, data_in [28] $end
$var wire 1 f, data_in [27] $end
$var wire 1 g, data_in [26] $end
$var wire 1 h, data_in [25] $end
$var wire 1 i, data_in [24] $end
$var wire 1 j, data_in [23] $end
$var wire 1 k, data_in [22] $end
$var wire 1 l, data_in [21] $end
$var wire 1 m, data_in [20] $end
$var wire 1 n, data_in [19] $end
$var wire 1 o, data_in [18] $end
$var wire 1 p, data_in [17] $end
$var wire 1 q, data_in [16] $end
$var wire 1 r, data_in [15] $end
$var wire 1 s, data_in [14] $end
$var wire 1 t, data_in [13] $end
$var wire 1 u, data_in [12] $end
$var wire 1 v, data_in [11] $end
$var wire 1 w, data_in [10] $end
$var wire 1 x, data_in [9] $end
$var wire 1 y, data_in [8] $end
$var wire 1 z, data_in [7] $end
$var wire 1 {, data_in [6] $end
$var wire 1 |, data_in [5] $end
$var wire 1 }, data_in [4] $end
$var wire 1 ~, data_in [3] $end
$var wire 1 !- data_in [2] $end
$var wire 1 "- data_in [1] $end
$var wire 1 #- data_in [0] $end
$var wire 1 o" data_out [31] $end
$var wire 1 p" data_out [30] $end
$var wire 1 q" data_out [29] $end
$var wire 1 r" data_out [28] $end
$var wire 1 s" data_out [27] $end
$var wire 1 t" data_out [26] $end
$var wire 1 u" data_out [25] $end
$var wire 1 v" data_out [24] $end
$var wire 1 w" data_out [23] $end
$var wire 1 x" data_out [22] $end
$var wire 1 y" data_out [21] $end
$var wire 1 z" data_out [20] $end
$var wire 1 {" data_out [19] $end
$var wire 1 |" data_out [18] $end
$var wire 1 }" data_out [17] $end
$var wire 1 ~" data_out [16] $end
$var wire 1 !# data_out [15] $end
$var wire 1 "# data_out [14] $end
$var wire 1 ## data_out [13] $end
$var wire 1 $# data_out [12] $end
$var wire 1 %# data_out [11] $end
$var wire 1 &# data_out [10] $end
$var wire 1 '# data_out [9] $end
$var wire 1 (# data_out [8] $end
$var wire 1 )# data_out [7] $end
$var wire 1 *# data_out [6] $end
$var wire 1 +# data_out [5] $end
$var wire 1 ,# data_out [4] $end
$var wire 1 -# data_out [3] $end
$var wire 1 .# data_out [2] $end
$var wire 1 /# data_out [1] $end
$var wire 1 0# data_out [0] $end
$upscope $end

$scope module controller $end
$var wire 1 9" clk $end
$var wire 1 :" reset $end
$var wire 1 &- inst_write_addr [31] $end
$var wire 1 '- inst_write_addr [30] $end
$var wire 1 (- inst_write_addr [29] $end
$var wire 1 )- inst_write_addr [28] $end
$var wire 1 *- inst_write_addr [27] $end
$var wire 1 +- inst_write_addr [26] $end
$var wire 1 ,- inst_write_addr [25] $end
$var wire 1 -- inst_write_addr [24] $end
$var wire 1 .- inst_write_addr [23] $end
$var wire 1 /- inst_write_addr [22] $end
$var wire 1 0- inst_write_addr [21] $end
$var wire 1 1- inst_write_addr [20] $end
$var wire 1 2- inst_write_addr [19] $end
$var wire 1 3- inst_write_addr [18] $end
$var wire 1 4- inst_write_addr [17] $end
$var wire 1 5- inst_write_addr [16] $end
$var wire 1 6- inst_write_addr [15] $end
$var wire 1 7- inst_write_addr [14] $end
$var wire 1 8- inst_write_addr [13] $end
$var wire 1 9- inst_write_addr [12] $end
$var wire 1 :- inst_write_addr [11] $end
$var wire 1 ;- inst_write_addr [10] $end
$var wire 1 <- inst_write_addr [9] $end
$var wire 1 =- inst_write_addr [8] $end
$var wire 1 g" inst_write_addr [7] $end
$var wire 1 h" inst_write_addr [6] $end
$var wire 1 i" inst_write_addr [5] $end
$var wire 1 j" inst_write_addr [4] $end
$var wire 1 k" inst_write_addr [3] $end
$var wire 1 l" inst_write_addr [2] $end
$var wire 1 m" inst_write_addr [1] $end
$var wire 1 n" inst_write_addr [0] $end
$var wire 1 ^" inst_write_enable $end
$var wire 1 T- mac_addr [1] $end
$var wire 1 U- mac_addr [0] $end
